    1  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\n
    2  p10k configure
    3  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"\n\n
    4  p10k configure
    5  ls
    6  clear
    7  pwd
    8  curl -s "https://get.sdkman.io" | bash
    9  ll
   10  source ~/.zshrc
   11  ll
   12  source ~/.zshrc
   13  reload
   14  ll 
   15  source ~/.zshrc
   16  which git
   17  ll /usr/bin/git
   18  ll
   19  ls
   20  git config --global user.name "Auri Munoz"
   21  ls
   22  ll
   23  git st
   24  ll
   25  ll .ssh
   26  git clone git@github.com:quarkusio/quarkus.git
   27  chmod 666 /Users/auri/.ssh/id_rsa
   28  ll /Users/auri/.ssh/
   29  git clone git@github.com:quarkusio/quarkus.git
   30  chmod 600 /Users/auri/.ssh/id_rsa
   31  git clone git@github.com:quarkusio/quarkus.git
   32  cd quarkus
   33  ll
   34  mvnw clean install -Dquickly -TC1
   35  ./mvnw clean install -Dquickly -TC1
   36  sdk list java
   37  sdk install java
   38  java -version
   39  ./mvnw clean install -Dquickly -TC1
   40  which java
   41  sdk list maven
   42  sdk install maven
   43  which maven
   44  maven -version
   45  mvn -version
   46  mvn clean
   47  docker cleqr
   48  docker -version
   49  cd ;;
   50  cd ..
   51  cd auri
   52  ll
   53  cd Code
   54  mkdir Code
   55  cd Code
   56  cd ..
   57  cd code
   58  ll
   59  git clone https://github.com/quarkusio/quarkus.git
   60  ll
   61  cd quarkus
   62  ./mvnw clean install -Dquickly -TC1
   63  git fetch --all
   64  git pull -r
   65  ./mvnw clean install -Dquickly -TC1
   66  ./mvnw clean install -Dquickly
   67  vi .git/config
   68  git fetch --all
   69  git co main
   70  git pull -r
   71  git co [remote "origin"]\n        url = https://github.com/quarkusio/quarkus.git\n        fetch = +refs/heads/*:refs/remotes/origin/*
   72  reload
   73  git co main
   74  git rebase main
   75  cd ..
   76  git clone https://github.com/quarkusio/quarkus-quickstarts.git
   77  cd quarkus-quickstarts/stork-quickstart
   78  ll
   79  https://github.com/quarkusio/quarkus-quickstarts.git
   80  docker run --rm --name consul -p 8500:8500 -p 8501:8501 consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
   81  cd Code/quarkus-quickstarts
   82  cd stork-
   83  cd stork-quickstart
   84  ./mvnw clean package
   85  ./mvnw clean install
   86  cd stork-quickstart
   87  ./mvnw clean install
   88  java -jar target/quarkus-app/quarkus-run.jar
   89  curl http://localhost:8080/api
   90  ./mvnw clean install
   91  ./mvnw clean install -DskipTests
   92  java -jar target/quarkus-app/quarkus-run.jar
   93  curl http://localhost:8080/api\?name\=Auri
   94  curl http://localhost:8080/api?name=Auri
   95  ./mvnw clean install -DskipTests
   96  java -jar target/quarkus-app/quarkus-run.jar
   97  curl http://localhost:8080/api
   98  ./mvnw clean install -Dquickly -TC1
   99  mvn clean install -Dquickly -TC1
  100  cd ..
  101  cd quarkus
  102  cd ..
  103  cd quarkus
  104  mvn clean install -Dquickly -TC1
  105  ./mvnw clean install -Dquickly -TC1
  106  brew install kind
  107  [ $(uname -m) = arm64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.15.0/kind-darwin-arm64
  108  ll
  109  chmod +x ./kind
  110  cd
  111  ll
  112  mkdir tools
  113  ll
  114  cd tools
  115  pwd
  116  cd ..
  117  cd code
  118  ll
  119  cd quarkus
  120  mv ./kind ~/tools/kind
  121  cd ~/tools/kind
  122  ll
  123  cd ~/tools/kind
  124  cd ~/tools/
  125  ll
  126  kind create cluster
  127  ./kind create cluster
  128  echo "$(cat kubectl.sha256)  kubectl" | shasum -a 256 --check
  129  ll
  130  echo "$(cat kubectl.sha256)  kubectl" | shasum -a 256 --check\n
  131  chmod +x ./kubectl
  132  echo $PQTH
  133  echo $PATH
  134  sudo mv ./kubectl /usr/local/bin/kubectl
  135  ll
  136  sudo mv ./kind /usr/local/bin/kind
  137  ll
  138  rm kubectl.sha256
  139  kind clusters
  140  kind get clusters
  141  (\n  set -x; cd "$(mktemp -d)" &&\n  OS="$(uname | tr '[:upper:]' '[:lower:]')" &&\n  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&\n  KREW="krew-${OS}_${ARCH}" &&\n  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&\n  tar zxvf "${KREW}.tar.gz" &&\n  ./"${KREW}" install krew\n)\n
  142  kubectl krew
  143  ll
  144  ll $HOME/.krew/bin
  145  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"\n
  146  kubectl krew
  147  kubectl krew install konfig\n
  148  kubectl krew install ctx\n
  149  kubectl krew install ns
  150  mkdir kcp && cd kcp
  151  hw=darwin
  152  version=0.7.8\n
  153  version=0.7.8
  154  wget https://github.com/kcp-dev/kcp/releases/download/v$\{version\}/kcp_$\{version\}_$\{hw\}_amd64.tar.gz
  155  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  156  ll
  157  brew install wget
  158  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  159  brew install wget
  160  eval "$(/opt/homebrew/bin/brew shellenv)"
  161  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"'
  162  eval "$(/opt/homebrew/bin/brew shellenv)"
  163  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/auri/.zshrc
  164  eval "$(/opt/homebrew/bin/brew shellenv)"
  165  source ~/.zshrc
  166  eval "$(/opt/homebrew/bin/brew shellenv)"
  167  brew help
  168  brew install wget
  169  wget https://github.com/kcp-dev/kcp/releases/download/v$\{version\}/kcp_$\{version\}_$\{hw\}_amd64.tar.gz
  170  wget https://github.com/kcp-dev/kcp/releases/download/v0.7.8/kcp_0.7.8_darwing_amd64.tar.gz
  171  wget https://github.com/kcp-dev/kcp/releases/download/v0.7.8/kcp_0.7.8_darwin_arm64.tar.gz
  172  wget https://github.com/kcp-dev/kcp/releases/download/v0.7.8/kubectl-kcp-plugin_0.7.8_darwin_arm64.tar.gz
  173  ll
  174  mv kcp_0.7.8_darwin_arm64.tar.gz tools/kcp
  175  mv kubectl-kcp-plugin_0.7.8_darwin_arm64.tar.gz tools/kcp/
  176  ll
  177  ll tools
  178  ll tools/kcp
  179  cd tools/kcp
  180  tar -vxf kcp_0.7.8_darwin_arm64.tar.gz
  181  tar -vxf kubectl-kcp-plugin_0.7.8_darwin_arm64.tar.gz
  182  ll
  183  cp bin/kubectl-* /usr/local/bin
  184  sudo cp bin/kubectl-* /usr/local/bin
  185  ll
  186  kcp
  187  ll /usr/local/bin
  188  ll
  189  ll bin
  190  sudo mv bin/* /usr/local/bin/kcp
  191  sudo mv bin/* /usr/local/bin/
  192  ll /usr/local/bin/
  193  ll
  194  ll bin
  195  kcp start
  196  history
  197  ll /usr/local/bin/
  198  kcp start
  199  ll
  200  ll .kcp
  201  export KUBECONFIG=.kcp/admin.kubeconfig
  202  k kcp ws create --type Organization green
  203  echo $KUBECONFIG
  204  clear
  205  ll .kcp/
  206  export KUBECONFIG=.kcp/admin.kubeconfig
  207  echo $KUBECONFIG
  208  ll .kcp/
  209  kcp start
  210  k kcp ws create --type Organization green
  211  ll
  212  ll bin
  213  ll .kcp
  214  cd ..
  215  mv kcp kcp-backup
  216  ll
  217  mkdir kcp
  218  cd kcp
  219  wget https://github.com/kcp-dev/kcp/releases/download/v0.8.0/kcp_0.8.0_darwin_arm64.tar.gz
  220  ll
  221  wget https://github.com/kcp-dev/kcp/releases/download/v0.8.0/kubectl-kcp-plugin_0.8.0_darwin_arm64.tar.gz
  222  ll
  223  tar -vxf kcp_0.8.0_darwin_arm64.tar.gz
  224  ll
  225  tar -vxf kubectl-kcp-plugin_0.8.0_darwin_arm64.tar.gz
  226  ll
  227  ll bin/kcp
  228  sudo mv bin/* /usr/local/bin/
  229  ll bin
  230  ll
  231  rm -rf .kcp
  232  ll
  233  kcp start
  234  ll
  235  history
  236  kind delete cluster
  237  kind create cluster
  238  ll
  239  kubectl kcp workspace create my-org --enter
  240  export KUBECONFIG=.kcp/admin.kubeconfig
  241  echo $KUBECONFIG
  242  kubectl kcp workspace create my-org --enter
  243  rm -rf .kcp
  244  ll
  245  kind delete cluster
  246  kind create cluster
  247  ll
  248  ll .kcp
  249  kcp start
  250  kind delete cluster
  251  rm -rf .kcp
  252  kcp start
  253  kind delete cluster
  254  kind create cluster
  255  kubectl kcp workspace create my-org --enter
  256  echo $KUBECONFIG
  257  export KUBECONFIG=.kcp/admin.kubeconfig
  258  echo $KUBECONFIG
  259  ll tools/kcp/.kcp/admin.kubeconfig
  260  export KUBECONFIG=tools/kcp/.kcp/admin.kubeconfig
  261  echo $KUBECONFIG
  262  kubectl kcp workspace create my-org --enter
  263  history
  264  clear
  265  ll
  266  rm -rf .kcp
  267  rm -rf bin
  268  rm -rf LICENSE
  269  rm -rf README.md
  270  ll
  271  rm -rf .DS_Store
  272  ll
  273  cleqr
  274  clear
  275  tar -vxf kcp_0.8.0_darwin_arm64.tar.gz
  276  tar -vxf kubectl-kcp-plugin_0.8.0_darwin_arm64.tar.gz
  277  sudo mv bin/* /usr/local/bin/
  278  kcp start
  279  kind delete cluster
  280  kind create cluster
  281  export KUBECONFIG=tools/kcp/.kcp/admin.kubeconfig
  282  kubectl kcp workspace create my-org --enter
  283  cd ..
  284  rm -rf kcp
  285  ll
  286  mkdir kcp && cd kcp
  287  kcp_path=$(pwd) && echo $kcp_path
  288  version=0.8.0
  289  wget https://github.com/kcp-dev/kcp/releases/download/v0.8.0/kubectl-kcp-plugin_0.8.0_darwin_arm64.tar.gz
  290  wget https://github.com/kcp-dev/kcp/releases/download/v0.8.0/kcp_0.8.0_darwin_arm64.tar.gz
  291  tar -xvf kcp_0.8.0_darwin_arm64.tar.gz
  292  tar -xvf kubectl-kcp-plugin_0.8.0_darwin_arm64.tar.gz
  293  sudo mv bin/* /usr/local/bin/
  294  kcp start
  295  version=0.8.0
  296  export kcp_path=/Users/auri/tools/kcp
  297  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig
  298  kind delete cluster
  299  kind create cluster
  300  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig
  301  kubectl kcp workspace create my-org --enter
  302  export KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig
  303  kubectl kcp workspace create my-org --enter
  304  kubectl kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v${version} -o syncer-kind.yml
  305  k apply -f "syncer-kind.yml"
  306  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig k kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v${version} -o syncer-kind.yml
  307  k apply -f "syncer-kind.yml"
  308  ll
  309  rm -rf syncer-kind.yml
  310  rm java_error_in_idea.hprof
  311  cd tools/kcp
  312  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig k kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v${version} -o syncer-kind.yml
  313  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig kubectl apply -f "syncer-kind.yml"
  314  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig kubectl get deployment -n "kcp-syncer-kind-vtv1z65c" kcp-syncer-kind-vtv1z65c
  315  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig k kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.0 -o syncer-kind.yml
  316  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig kubectl apply -f "syncer-kind.yml"
  317  k get pods
  318  k get crd
  319  k get all
  320  kubectl get ns
  321  kubectl ns 
  322  kubectl config view --minify --output 'jsonpath={..namespace}'\n
  323  kubectl config set-context --current --namespace=kcp-syncer-kind-vtv1z65c
  324  kubectl config view --minify --output 'jsonpath={..namespace}'\n
  325  kubectl get ns
  326  kubectl get pods
  327  kubectl get crd
  328  kubectl get all
  329  kubectl kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.0 -o syncer-kind.yml
  330  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig kubectl apply -f syncer.yaml
  331  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig kubectl apply -f syncer-kind.yaml
  332  ll
  333  KUBECONFIG=${kcp_path}/.kcp/admin.kubeconfig kubectl apply -f syncer-kind.yml
  334  kubectl config view --minify --output 'jsonpath={..namespace}'\n
  335  ll
  336  cd ..
  337  ll
  338  cd kcp
  339  cd ..
  340  rm -rf kcp
  341  ll
  342  cd kcp
  343  ll
  344  chmod +x kcp.sh
  345  ll
  346  ./kcp.sh
  347  ll
  348  ll _tmp
  349  ll _tmp/bin
  350  ll
  351  cd _tmp
  352  tar -xvf kcp_0.8.0_darwin_arm64.tar.gz
  353  tar -xvf kubectl-kcp-plugin_0.8.0_darwin_arm64.tar.gz
  354  ll
  355  ll bin
  356  cd ..
  357  cd code
  358  git clone git@github.com:ch007m/kcp.git
  359  cd kcp
  360  ll
  361  cd ..
  362  cd tools
  363  cd kcp
  364  ll
  365  git clone git@github.com:ch007m/kcp.git
  366  ll _tmp
  367  ll
  368  rm -rf _tmp
  369  ll kcp
  370  cd kcp
  371  ./kcp.sh
  372  cd tools
  373  ll
  374  cd kcp-backup
  375  ll
  376  cd ..
  377  rm -rf kcp-backup
  378  ll
  379  cd kcp
  380  ll
  381  cd kcp
  382  ll
  383  ./demo.sh
  384  ll $HOME/.kube/
  385  ll $HOME/.kube/config
  386  git st
  387  ll
  388  rm -rf _tmp
  389  ll
  390  ./kcp.sh
  391  cd tools/kcp/kcp
  392  ll
  393  ./demo.sh
  394  git checkout -b fix-4-arm
  395  git push origin fix-4-arm
  396  vi .git/config
  397  git push auri fix-4-arm
  398  git co main
  399  git pull -r
  400  git co mqin
  401  git co main
  402  git pull -r
  403  git co rrc-stork-on-filter
  404  git rebase main
  405  mvn clean install -Dquickly -TC1
  406  ./mvnw clean install -Dquickly -TC1
  407  java -version
  408  ./mvnw clean install -Dquickly
  409  cd
  410  cd Code/quarkus
  411  ll
  412  rm -rf .idea
  413  rm -rf quarkus-parent.iml
  414  ./mvnw clean install -Dquickly
  415  mvn clean install
  416  docker run --rm --name consul -p 8500:8500 -p 8501:8501 consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
  417  mvn clean install -DskipTests
  418  java -jar target/quarkus-app/quarkus-run.jar
  419  curl http://localhost:8080/api
  420  mvn clean install -DskipTests
  421  java -jar target/quarkus-app/quarkus-run.jar
  422  curl http://localhost:8080/api
  423  mvn clean install -DskipTests
  424  java -jar target/quarkus-app/quarkus-run.jar
  425  curl http://localhost:8080/api
  426  mvn clean install -DskipTests
  427  java -jar target/quarkus-app/quarkus-run.jar
  428  curl http://localhost:8080/api
  429  mvn clean install -DskipTests
  430  java -jar target/quarkus-app/quarkus-run.jar
  431  curl http://localhost:8080/api
  432  git st
  433  git pull -r
  434  ll
  435  rm -rf _tmp
  436  ll
  437  ./kcp.sh install -v 0.8.0
  438  ll
  439  cd tools
  440  ll
  441  cd kcp
  442  ll
  443  cd kcp
  444  ./demo.sh
  445  ll
  446  ll _tmp
  447  ll _tmp/bin
  448  ll
  449  Usage:
  450  Commands:
  451  Arguments:
  452  ./kcp.sh install -v 0.8.0 -t auri
  453  ll
  454  ll auri
  455  ll auri/bin
  456  ll auri/bin/kcp
  457  git checkout -b refactor
  458  git push auri refactor
  459  ll
  460  ./demo.sh
  461  ./mvnw clean install -Dquickly
  462  mvn clean quarkus:dev -Dsuspend
  463  docker run --rm --name consul -p 8500:8500 -p 8501:8501 consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
  464  curl http://localhost:8080/api
  465  mvn clean quarkus:dev -Dsuspend
  466  curl http://localhost:8080/api
  467  ./mvnw clean install -Dquickly
  468  mvn clean quarkus:dev
  469  curl http://localhost:8080/api
  470  cd
  471  ll
  472  cd ..
  473  ll
  474  cd ..
  475  ll
  476  ll Volumes
  477  cd /Volumes/homes/Auri/Backup Fedora/Home
  478  cd /Volumes/homes/Auri/Backup\ Fedora/Home
  479  ll
  480  cd Code
  481  cd smallrye-load-balancer
  482  ll
  483  mvn clean
  484  git st
  485  git pull -r
  486  git st
  487  mvn clean install
  488  git co mqin
  489  git co main
  490  git pull -r
  491  git co rrc-stork-on-filter
  492  git rebase main
  493  mvn clean install -Dquickly
  494  git fetch --all
  495  git co development 
  496  git pull -r
  497  git checkout -b add-custom-filter
  498  mvn clean install
  499  lsof -i tcp:8080
  500  kill -9 10227
  501  mvn clean install
  502  cd ..
  503  ll .git
  504  vi .git/config
  505  git push auri add-custom-filter 
  506  cd stork-quickstart
  507  mvn clean test
  508  mvn clean package -Pnative
  509  git lg
  510  git rebase -i bc451819b2
  511  git lg
  512  git co main
  513  git pull -r
  514  git co rrc-stork-on-filter
  515  git lg
  516  git rebase -i bc451819b2
  517  git push auri -f rrc-stork-on-filter
  518  vi .git/config
  519  git push auri -f rrc-stork-on-filter
  520  mvn clean install -Dquickly
  521  sdk install graalvm
  522  sdk install graal
  523  sdk list jvm
  524  sdk list java
  525  sdk install java 22.2.r17-grl
  526  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  527  mvn clean install -Dnative -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  528  java -version
  529  which java
  530  lli -version
  531  ll /Users/auri/.sdkman/candidates/java/current
  532  ll /Users/auri/.sdkman/candidates/
  533  ll /Users/auri/.sdkman/candidates/java
  534  ll /Users/auri/.sdkman/candidates/java/22.2.r17-grl
  535  ll /Users/auri/.sdkman/candidates/java/22.2.r17-grl/bin
  536  ll /Users/auri/.sdkman/candidates/java/22.2.r17-grl
  537  ll /Users/auri/.sdkman/candidates/java/22.2.r17-grl/bin/gu
  538  ll /Users/auri/.sdkman/candidates/java/22.2.r17-grl/bin/gu/
  539  export GRAALVM_HOME=/Users/auri/.sdkman/candidates/java/22.2.r17-grl
  540  export PATH=$GRAALVM_HOME/bin:$PATH
  541  lli -version
  542  java -version
  543  mvn clean install -Dnative -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  544  source ~/.zshrc
  545  java -version
  546  echo $GRAALVM_HOME=/Users/auri/.sdkman/candidates/java/22.2.r17-grl
  547  echo $GRAALVM_HOME
  548  sdk list  java
  549  sdk use java 22.2.r17-grl
  550  java -version
  551  gu install native-image
  552  mvn clean install -Dnative -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  553  java -version
  554  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  555  echo $GRAALVM_HOME
  556  sdk list java
  557  sdk use java 22.2.r17-grl
  558  java -version
  559  mvn clean install -Dnative -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  560  mvn clean verify -Pnative
  561  java -version
  562  sdk use java 22.2.r17-grl
  563  java -version
  564  mvn clean verify -Pnative
  565  mvn clean package -Pnative
  566  cd 
  567  vi connectvpn
  568  vi .pin.txt
  569  vi connectvpn
  570  rm .pin.txt
  571  vi .pin.txt
  572  npm install -g htoken
  573  sdk install npm
  574  brew install npm
  575  npm install -g htoken
  576  htoken
  577  cat ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  578  ll
  579  cat .rhtoken.json
  580  vi ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  581  mv connectvpn /usr/local/bin/
  582  sudo mv connectvpn /usr/local/bin/
  583  vi ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  584  connectvpn
  585  ll /usr/local/bin/
  586  sudo chmod +x /usr/local/bin
  587  sudo chmod +x /usr/local/bin/connectvpn
  588  ll /usr/local/bin/
  589  connectvnp
  590  connectvpn
  591  cp /usr/local/bin/connectvpn
  592  cp /usr/local/bin/connectvpn .
  593  vi connectvpn
  594  sudo mv connectvpn /usr/local/bin/
  595  connectvpn
  596  dos2unix /usr/local/bin/connectvpn
  597  connectvpn
  598  htoken
  599  vi connectvpn
  600  vi ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  601  htoken
  602  connectvpn
  603  cat .rhtoken.json
  604  vi .rhtoken.json
  605  htoken
  606  clear
  607  htoken
  608  connectvpn
  609  cleqr
  610  clear
  611  cd
  612  ll ~/Library/Application\ Support
  613  ll ~/Library/Application\ Support/Viscosity
  614  ll ~/Library/Application\ Support/Viscosity/OpenVPN
  615  connectvpn
  616  ll ~/Library/Application\ Support/Viscosity/OpenVPN/2
  617  ll ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  618  cat ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  619  cat /Users/auri/.auth.txt
  620  ps -ef
  621  ps -ef | grep Viscosity
  622  kill -9 71993
  623  ps -ef | grep Viscosity
  624  kill -9 70502
  625  ps -ef 
  626  cat /Users/auri/.auth.txt
  627  ps -ef | grep Viscosity
  628  connectvpn 
  629  ps -ef | grep Viscosity
  630  ll ~/Library/Application\ Support/Viscosity/OpenVPN/2/config.conf
  631  ll ~/Library/Application\ Support/Viscosity/
  632  ll ~/Library/Application\ Support/
  633  ll ~/Library/Application\ Support/Viscosity
  634  rm -rf ~/Library/Application\ Support/Viscosity
  635  ll ~/Library/Application\ Support/Viscosity
  636  cd Trash
  637  ll
  638  htoken
  639  /usr/local/outset/login-once/viscosity1*
  640  htoken
  641  connectvpn 
  642  git co development 
  643  git fetch --all
  644  git pull -r
  645  cd ..
  646  cd stork-kubernetes-quickstart
  647  git fetch --all
  648  git pull -r
  649  git co main
  650  git fetch --all
  651  git pull -r
  652  mvn clean install -Dquickly
  653  ./mvnw clean install -Dquickly
  654  git pull -r
  655  git co rrc-stork-on-filter
  656  ./mvnw clean install -Dquickly
  657  connectvpn 
  658  htoken
  659  git co main
  660  git pull -r
  661  ./mvnw clean install -Dquickly
  662  ll  /Users/auri/.m2/repository/io/fabric8/openshift-model/6.1.1/
  663  ll  /Users/auri/.m2/repository/io/fabric8/openshift-model/
  664  rm -rf /Users/auri/.m2/repository/io/fabric8/openshift-model/6.1.1
  665  ll  /Users/auri/.m2/repository/io/fabric8/openshift-model/
  666  ./mvnw clean install -Dquickly
  667  ./mvnw clean install
  668  ./mvnw -Dnative clean install 
  669  java -version
  670  sdk use java 22.2.r17-grl
  671  java -version
  672  ./mvnw -Dnative clean install 
  673  mvn dependency:tree
  674  mvn dependency:tree > deps.txt
  675  git pull -r
  676  ./mvnw -Dnative clean install 
  677  ./mvnw clean install 
  678  mvn clean install 
  679  docker version
  680  mvn clean install
  681  ./mvnw clean install -Dquickly
  682  cd code
  683  git clone git@github.com:kubernetes-client/java.git
  684  ll
  685  rm -rf java
  686  git clone git@github.com:fabric8io/kubernetes-client.git
  687  ./mvnw clean install 
  688  ./mvnw clean install -Dnative
  689  mvn dependency:tree > deps.txt
  690  ll
  691  mvn dependency:tree > deps.txt
  692  ./mvnw clean install
  693  ll /Users/auri/.m2
  694  ll /Users/auri/.m2/repository
  695  ll /Users/auri/.m2/repository/io/fabric8
  696  ll /Users/auri/.m2/repository/io/fabric8/kubernetes-client
  697  ll /Users/auri/.m2/repository/
  698  ll /Users/auri/.m2/repository/io/smallrye/stork
  699  ll /Users/auri/.m2/repository/io/smallrye/stork/stork-service-discovery-kubernetes
  700  git checkout -b 1.1.2 1.1.2
  701  mvn dependency:tree > deps.txt
  702  git co main
  703  git pull -r
  704  mvn dependency:tree > deps.txt
  705  git fetch tag --all
  706  git fetch --all
  707  git tag
  708  git tag -a
  709  git tag
  710  git checkout -b 1.2.0 1.2.0
  711  mvn dependency:tree > deps-1.2.0.txt
  712  ./mvnw clean install -Dquickly
  713  ./mvnw clean install
  714  mvn dependency:tree > deps-1.2.0.txt
  715  mvn dependency:tree > deps-1.2.0-bis.txt
  716  ./mvnw clean install -Dquickly
  717  ./mvnw clean install
  718  ./mvnw clean install -Dnative
  719  git checkout -b upgrade-stork-version
  720  git co main
  721  git pull -r
  722  git co upgrade-stork-version
  723  git co main
  724  git pull -r
  725  git co upgrade-stork-version
  726  git rebase main
  727  git push auri upgrade-stork-version
  728  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  729  mvn clean install -Dnative -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  730  java -version
  731  sdk use java 22.2.r17-grl
  732  java -version
  733  mvn clean install -Dnative -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
  734  mvn clean install
  735  git checkout -b name-class
  736  git push auri  name-class
  737  htoken
  738  cd code
  739  git clone git@github.com:quarkus-qe/quarkus-test-suite.git
  740  cd quarkus-test-suite
  741  mvn clean install
  742  mvn dependency:tree > deps.txt
  743  ll
  744  mvn quarkus:dev
  745  cd ..
  746  ll
  747  cd ..
  748  mvn clean install -Dquickly
  749  mvn clean package
  750  mvn dependency:tree > deps.txt
  751  mvn clean dependency:tree > deps.txt
  752  mvn clean package
  753  mvn quarkus:dev
  754  curl -v Http://localhost:8080/ping/pong
  755  mvn quarkus:dev -Dsuspend
  756  curl -v Http://localhost:8080/ping/pong
  757  mvn quarkus:dev -Dsuspend
  758  curl -v Http://localhost:8080/ping/pong
  759  mvn quarkus:dev -Dsuspend
  760  curl -v Http://localhost:8080/ping/pong
  761  mvn quarkus:dev -Dsuspend
  762  curl -v Http://localhost:8080/ping/pong
  763  mvn quarkus:dev -Dsuspend
  764  curl -v Http://localhost:8080/ping/pong
  765  mvn quarkus:dev -Dsuspend
  766  curl -v Http://localhost:8080/ping/pong
  767  mvn quarkus:dev -Dsuspend
  768  curl -v Http://localhost:8080/ping/pong
  769  mvn quarkus:dev -Dsuspend
  770  curl -v Http://localhost:8080/ping/pong
  771  mvn clean package
  772  mvn quarkus:dev -Dsuspend
  773  curl -v Http://localhost:8080/ping/pong
  774  mvn clean package
  775  mvn quarkus:dev
  776  curl -v Http://localhost:8080/ping/pong
  777  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.2-java17
  778  mvn clean verify -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.2-java17
  779  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.2-java17
  780  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64 
  781  java -version
  782  sdk use java 22.2.r17-grl
  783  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative
  784  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.2-java17
  785  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  786  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative
  787  git co main
  788  git pull -r
  789  mvn clean install -Dquickly
  790  mvn quarkus:dev
  791  curl -v Http://localhost:8080/ping/pong
  792  mvn quarkus:dev
  793  git pull -r
  794  mvn clean 
  795  mvn clean quarkus:dev
  796  curl -v Http://localhost:8080/ping/pong
  797  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  798  java -version
  799  git co upgrade-stork-version
  800  git co main
  801  git pull -r
  802  git co upgrade-stork-version
  803  git rebase main
  804  mvn clean install -Dquickly
  805  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  806  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.2-java17 -Dquarkus.native.container-runtime-options0=--platform linux/amd64
  807  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  808  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative 
  809  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  810  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1.0-java11-arm64 
  811  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  812  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative
  813  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17
  814  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 
  815  C
  816  mvn quarkus:add-extension -Dextensions="io.quarkus:quarkus-kubernetes-client"
  817  mvn clean verify -Dall-modules -pl service-discovery/stork 
  818  cd ..
  819  cd stork
  820  mvn quarkus:add-extension -Dextensions="io.quarkus:quarkus-kubernetes-client"
  821  mvn clean verify -Dall-modules -pl service-discovery/stork 
  822  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 
  823  git co main
  824  git fetch --all
  825  git pull -r
  826  mvn clean install -Dquickly
  827  htoken
  828  java -version
  829  sdk use java 22.2.r17-grl
  830  java -version
  831  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative
  832  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17
  833  mvn clean verify -Dall-modules -pl service-discovery/stork -Dnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-arm64
  834  clear
  835  ll
  836  cd
  837  ll
  838  kind
  839  kind version
  840  cd code
  841  ll
  842  cd kcp
  843  ll
  844  git pull -r
  845  ll
  846  kind create cluster
  847  ./kcp.sh install -v 0.8.2
  848  ./kcp.sh start
  849  ./kcp.sh top
  850  ./kcp.sh stop
  851  ./kcp.sh clean
  852  kind delete cluster
  853  kind create cluster
  854  ./kcp.sh install -v 0.8.2
  855  ./kcp.sh start
  856  brew install bash_completion
  857  source ~/.zshrc
  858  brew list complete
  859  cd Code/kcp
  860  ll
  861  ./kcp.sh syncer -w my-org
  862  ll
  863  ll _tmp
  864  find -name syncer-kind.yml
  865  find -name "syncer-kind.yml"
  866  find . -name "syncer-kind.yml"
  867  Generate
  868  ll
  869  ll _tmp
  870  ll _tmp/.kcp
  871  ./kcp.sh syncer -w my-org
  872  ll
  873  ./kcp.sh syncer -w my-org
  874  KUBECONFIG=.kcp/admin.kubeconfig k kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  875  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  876  k kcp workload sync --help
  877  KUBECONFIG=_tmp/.kcp/admin.kubeconfig && k kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  878  k kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  879  kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  880  kubectl kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  881  ./kcp.sh syncer -w my-org
  882  ll
  883  ll _tmp
  884  KUBECONFIG=.kcp/admin.kubeconfig k kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  885  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
  886  ./kcp.sh syncer -w my-org
  887  clear
  888  ./kcp.sh syncer -w my-org
  889  k kcp workload sync --help
  890  kubectl kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer.yaml
  891  k kcp workload sync --help
  892  ./kcp.sh syncer -w my-org
  893  ll
  894  ./demo.sh s1
  895  k get Placement
  896  k get scheduling.kcp.dev/v1alpha
  897  k get all
  898  k get crd
  899  k get all --all
  900  k get --help
  901  k get scheduling.kcp.dev -a
  902  k get scheduling.kcp.dev --all-namespaces
  903  k get Placement --all-namespaces
  904  k kcp 
  905  k kcp crd
  906  k kcp
  907  k kcp crd list
  908  k get placements.scheduling.kcp.dev
  909  k get placements.scheduling.kcp.dev --all-namespaces
  910  k api-resources
  911  k api-resources | grep "placements"
  912  ./kcp.sh status
  913  k kcp 
  914  k kcp crd help
  915  ./scenario-1.sh
  916  ./scenario-2.sh
  917  ll
  918  ll _tmp
  919  ll
  920  ./scenario-1.sh
  921  LL
  922  ll
  923  ll _tmp
  924  ll _tmp/.kcp
  925  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placements.scheduling.kcp.dev
  926  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placements.scheduling.kcp.dev -A
  927  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get all
  928  k cluster-info
  929  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placements.scheduling.kcp.dev -A
  930  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location --all
  931  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location -Q
  932  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location -A
  933  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws .
  934  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws root:my-org
  935  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location -A
  936  cat _tmp/.kcp/admin.kubeconfig
  937  cd ..
  938  git clone git@github.com:barcostreams/barco.git
  939  cd barco
  940  pip3 install pipenv
  941  /Library/Developer/CommandLineTools/usr/bin/python3 -m pip install --upgrade pip
  942  ll /usr/local/bin/
  943  pip3 install pipenv
  944  pipenv install
  945  cp '/Users/auri/Library/Python/3.8/bin'
  946  cp /Users/auri/Library/Python/3.8/bin /usr/local/bin/
  947  cp -R /Users/auri/Library/Python/3.8/bin /usr/local/bin/
  948  sudo cp -R /Users/auri/Library/Python/3.8/bin /usr/local/bin/
  949  pipenv install
  950  source ~/.zshrc
  951  brew install pipenv
  952  cd ..
  953  cd smallrye-load-balancer
  954  git co main
  955  git pull -r
  956  pipenv install
  957  pipenv run mkdocs build
  958  pip install mkdocs
  959  python
  960  brew install python3
  961  whereis python3
  962  which python3
  963  ll /usr/bin/python3
  964  mv /usr/bin/python3 /usr/local/bin/
  965  sudo mv /usr/bin/python3 /usr/local/bin/
  966  python3 -m ensurepip
  967  pip3 --version
  968  pip install mkdocs
  969  pip3 install mkdocs
  970  export PATH=/Users/auri/Library/Python/3.8/bin:$PATH
  971  ll
  972  cd docs
  973  ll
  974  mkdocs new barco
  975  ll
  976  ll barco
  977  ll
  978  rm -rf barco
  979  mkdocs new .
  980  ll
  981  ll docs
  982  mkdocs serve
  983  pipenv run mkdocs build
  984  which mkdocs
  985  export PATH=/Users/auri/Library/Python/3.8/bin:$PATH
  986  pipenv run mkdocs build
  987  cd docs
  988  pipenv run mkdocs build
  989  pipenv update
  990  cd docs
  991  pipenv run mkdocs build
  992  export PATH=/Users/auri/Library/Python/3.8/bin:$PATH
  993  pipenv run mkdocs build
  994  pipenv run mkdocs serve
  995  git checkout -b 1.0.0 1.0.0
  996  pipenv run mkdocs serve
  997  cd ..
  998  ll
  999  pipenv run mkdocs serve
 1000  pipenv run mkdocs build
 1001  pipenv run mkdocs serve
 1002  pip3 install mkdocs
 1003  pip3 install mkdocs-material
 1004  pip3 install mkdocs-macros-plugin
 1005  pip3 install mkdocs-build-plantuml-plugin
 1006  pip3 install mike
 1007  pipenv run mkdocs build
 1008  pipenv run mkdocs serve
 1009  git co main
 1010  history
 1011  git co 1.0.0
 1012  pipenv run mkdocs build
 1013  pipenv run mkdocs serve
 1014  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location -A
 1015  cd
 1016  cd code
 1017  ll
 1018  cd kcp
 1019  ll
 1020  git pull -r
 1021  ./kcp.sh status
 1022  ./kcp.sh stop
 1023  ./kcp.sh clean
 1024  ll
 1025  ./scenario-1.sh
 1026  ./kcp.sh status
 1027  cd code
 1028  cd kcp
 1029  ./kcp.sh syncer -w my-org
 1030  ll
 1031  ll _tmp
 1032  ./kcp.sh syncer -w my-org
 1033  kubectl kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
 1034  KUBECONFIG=_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml
 1035  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location -A
 1036  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws .
 1037  ./scenario-1.sh
 1038  ll
 1039  ll _tmp
 1040  kind cluster
 1041  kind get clusters
 1042  cat _tmp/.kcp/admin.kubeconfig
 1043  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws .
 1044  KUBECONFIG=_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync kind --resources --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml\n
 1045  k kcp workload sync --help
 1046  KUBECONFIG=_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.8.2 -o syncer-kind.yml\n
 1047  ./scenario-1.sh
 1048  git pull -r
 1049  ./scenario-1.sh
 1050  git checkout -b fix-append-resources
 1051  vi .git/config
 1052  git push auri fix-append-resources
 1053  ./scenario-2.sh
 1054  git pull -r
 1055  mvn clean install
 1056  pip3 install pipenv
 1057  pipenv install
 1058  pipenv run mkdocs build
 1059  cd docs
 1060  pipenv run mkdocs build
 1061  pipenv run mkdocs serve
 1062  git pull -r
 1063  git co main
 1064  git pull -r
 1065  ./scenario-1.sh
 1066  brew install kubectx
 1067  (\n  set -x; cd "$(mktemp -d)" &&\n  OS="$(uname | tr '[:upper:]' '[:lower:]')" &&\n  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&\n  KREW="krew-${OS}_${ARCH}" &&\n  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&\n  tar zxvf "${KREW}.tar.gz" &&\n  ./"${KREW}" install krew\n)\n
 1068  source ~/.zshrc
 1069  kubectl konfig
 1070  kubectl krew install konfig
 1071  ./scenario-1.sh
 1072  ./scenario-2.sh
 1073  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws use root:my-org
 1074  ./scenario-2.sh
 1075  kind get clusters
 1076  git reset ^HEAD
 1077  git reset HEAD^
 1078  git checkout -b fixes
 1079  git checkout -b ux-fixes
 1080  git push auri ux-fixes 
 1081  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k ctx kind-cluster1
 1082  ./scenario-2.sh
 1083  KUBECONFIG=$HOME/.kube/config k ctx kind-cluster1
 1084  ./scenario-2.sh
 1085  KUBECONFIG=/Users/auri/.kube/config k get po -lapp=quarkus -A -o name
 1086  KUBECONFIG=/Users/auri/.kube/config kubectl ctx kind-cluster1
 1087  KUBECONFIG=/Users/auri/.kube/config k get po -lapp=quarkus -A -o name
 1088  ./scenario-2.sh
 1089  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k ctx kind-cluster1
 1090  ./scenario-2.sh
 1091  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k ctx kind-cluster1
 1092  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k ctx kind-cluster2
 1093  hitory
 1094  history
 1095  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k ctx kind-cluster1
 1096  KUBECONFIG=$HOME/.kube/config k ctx kind-cluster1
 1097  KUBECONFIG=/Users/auri/.kube/config k get po -lapp=quarkus -A -o name
 1098  KUBECONFIG=$HOME/.kube/config k ctx kind-cluster2
 1099  KUBECONFIG=/Users/auri/.kube/config k get po -lapp=quarkus -A -o name
 1100  ./scenario-2.sh
 1101  KUBECONFIG=$HOME/.kube/config k ctx kind-cluster1
 1102  KUBECONFIG=/Users/auri/.kube/config k get po -lapp=quarkus -A -o name
 1103  k get po -lapp=quarkus -A -o name
 1104  ./scenario-2.sh
 1105  git push auri ux-fixes
 1106  ./scenario-3.sh
 1107  brew install helm
 1108  ./scenario-3.sh
 1109  git push auri ux-fixes
 1110  ll
 1111  ll _tmp
 1112  git push auri ux-fixes
 1113  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws .
 1114  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get pods
 1115  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get pods -A
 1116  kubectl create ns tests
 1117  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1 -n tests
 1118  kubectl get pods -n tests
 1119  k rollout --help
 1120  k rollout status --help
 1121  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k rollout status deployment/quarkus
 1122  k get deployments
 1123  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get deployments
 1124  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws use ..
 1125  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get deployments
 1126  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws use root:my-org
 1127  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get deployments
 1128  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws .
 1129  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp ws use root
 1130  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get deployments
 1131  ./kcp.sh clean
 1132  cd ..
 1133  ll
 1134  ll kcp
 1135  ll /usr/local/bin/
 1136  cd kcp
 1137  ll
 1138  ll _tmp
 1139  git main
 1140  git co main
 1141  git pull -r
 1142  git checkout -b manual-steps
 1143  kind delete cluster --name cluster1
 1144  kind create cluster --name cluster1
 1145  ./kcp.sh install -v 0.8.2
 1146  ll /usr/local/bin
 1147  ll /usr/local/
 1148  whoami
 1149  ./kcp.sh start
 1150  tail -f _tmp/kcp-output.log
 1151  ./kcp.sh status
 1152  KUBECONFIG=/Users/auri/.kube/config kubectl ctx kind-cluster1
 1153  ./kcp.sh clean
 1154  kind delete cluster --name cluster1
 1155  kind create cluster --name cluster1
 1156  ./kcp 
 1157  ./kcp.sh install -v 0.8.2
 1158  ./kcp.sh start
 1159  ./kcp.sh status
 1160  kubectl config current-context
 1161  ./kcp.sh syncer -w my-org -c cluster1
 1162  export KUBECONFIG= _tmp/.kcp/admin.kubeconfig
 1163  export KUBECONFIG=_tmp/.kcp/admin.kubeconfig
 1164  kubectl kcp ws use root:my-org
 1165  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus
 1166  kubectl delete deployment quarkus --image=quay.io/rhdevelopers/quarkus
 1167  kubectl delete deployment quarkus
 1168  kubectl delete deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1
 1169  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1
 1170  kubectl rollout status deployment/quarkus
 1171  kubectl get deployments
 1172  kubeclt kcp ws use ..
 1173  kubectl kcp ws use ..
 1174  kubectl get deployments
 1175  ./scenario-1.sh
 1176  git push auri manual-steps
 1177  htoken
 1178  git st
 1179  git co main
 1180  git pull -r
 1181  git co manual-steps
 1182  git rebase main
 1183  git rebase --continue
 1184  git push auri -f manual-steps
 1185  kind get clusters
 1186  pipenv run mkdocs serve
 1187  source ~/.zshrc
 1188  pipenv run mkdocs serve
 1189  cd docs
 1190  pipenv run mkdocs serve
 1191  mkdocs serve
 1192  source ~/.zshrc
 1193  pipenv run mkdocs serve
 1194  cd ..
 1195  ll
 1196  pipenv run mkdocs serve
 1197  mkdocs serve
 1198  ll
 1199  ll _tmp
 1200  ll _tmp/.kcp
 1201  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get placement,location -A
 1202  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get workload.kcp.dev/v1alpha1
 1203  htoken
 1204  ./scenario-1.sh
 1205  ./kcp.sh clean
 1206  ./kcp.sh install -v 0.8.2
 1207  kind delete cluster --name cluster1\n
 1208  kind create cluster --name cluster1
 1209  ./kcp.sh start
 1210  ./kcp.sh status
 1211  ./kcp.sh syncer -w my-org -c cluster1
 1212  export KUBECONFIG=$TMP/.kcp/admin.kubeconfig
 1213  ./kcp.sh syncer -w my-org -c cluster1
 1214  ll
 1215  ./kcp.sh clean
 1216  echo $KUBECONFIG
 1217  LL
 1218  ll
 1219  kind delete cluster --name cluster1
 1220  kind create cluster --name cluster1
 1221  source ~/.zshrc
 1222  echo $KUBECONFIG
 1223  source ~/.zshrc
 1224  echo $KUBECONFIG
 1225  unset KUBECONFIG
 1226  echo $KUBECONFIG
 1227  kind delete cluster --name cluster1
 1228  ./kcp.sh clean
 1229  kind create cluster --name cluster1
 1230  ./kcp.sh install -v 0.8.2
 1231  ./kcp.sh start
 1232  ./kcp.sh status
 1233  export KUBECONFIG=_tmp/.kcp/admin.kubeconfig\n
 1234  echo $KUBECONFIG
 1235  ./kcp.sh status
 1236  kubectl kcp ws use root:my-org
 1237  ./kcp.sh syncer -w my-org -c cluster1\n
 1238  kubectl kcp ws use root:my-org
 1239  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1\n
 1240  kubectl rollout status deployment/quarkus\n
 1241  k get pods
 1242  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get deployments
 1243  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k get pods
 1244  htoken
 1245  k get deployments
 1246  k delete deployement quarkus
 1247  k delete deployment quarkus
 1248  k get deployments
 1249  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1 --port=8080\n
 1250  kubectl proxy --port=8080
 1251  curl -v http://127.0.0.1:8080
 1252  curl -v http://127.0.0.1:8080/clusters/root:my-org
 1253  docker images 
 1254  source ~/.zshrc
 1255  echo $KUBECONFIG
 1256  ./kcp.sh clean
 1257  kind delete cluster --name cluster1
 1258  kind get clusters
 1259  kind delete cluster --name cluster2
 1260  kind create cluster --name cluster1
 1261  ./kcp.sh install -v 0.8.2
 1262  ./kcp.sh start
 1263  ./kcp.sh status
 1264  ./kcp.sh syncer -w $WORKSPACE -c cluster1
 1265  ./kcp.sh syncer -w my-org -c cluster1\n
 1266  kubectl kcp workspace get
 1267  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp workspace get
 1268  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp workspace --help
 1269  KUBECONFIG=_tmp/.kcp/admin.kubeconfig k kcp get workspaces
 1270  KUBECONFIG=_tmp/.kcp/admin.kubeconfig kubectl kcp get workspaces
 1271  export KUBECONFIG=$TMP/.kcp/admin.kubeconfig\n
 1272  export KUBECONFIG=_tmp/.kcp/admin.kubeconfig\n
 1273  kubectl kcp ws use root:my-org
 1274  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1
 1275  ./kcp.sh clean
 1276  kind delete cluster --name cluster1
 1277  source ~/.zshrc
 1278  echo $KUBECONFIG
 1279  unset KUBECONFIG
 1280  echo $KUBECONFIG
 1281  ./kcp.sh install -v 0.8.2
 1282  kind create cluster --name cluster1
 1283  ./kcp.sh start
 1284  ./kcp.sh status
 1285  ./kcp.sh syncer -w my-org -c cluster1
 1286  export KUBECONFIG=$TMP/.kcp/admin.kubeconfig\n
 1287  export KUBECONFIG=_tmp/.kcp/admin.kubeconfig\n
 1288  kubectl kcp ws use root:my-org
 1289  kubectl create deployment quarkus --image=quay.io/rhdevelopers/quarkus-demo:v1\n
 1290  kubectl rollout status deployment/quarkus\n
 1291  k create deployement red --image=quay.io/quarkus/red-service:1.0 --port=8080
 1292  kubectl create deployment red --image=quay.io/quarkus/red-service:1.0 --port=8080
 1293  kubectl proxy --port=8080
 1294  git push auri manual-steps
 1295  ./kcp.sh clean
 1296  kind delete cluster --name cluster1
 1297  unset KUBECONFIG
 1298  curl https://skupper.io/install.sh | sh
 1299  export KUBECONFIG=$HOME/.kube/config-west
 1300  export KUBECONFIG=$HOME/.kube/config-east
 1301  kubectl create namespace west
 1302  kubectx kind-kind
 1303  kubectl config current-context
 1304  unset KUBECONFIG
 1305  kubectl config current-context
 1306  kind get clusters
 1307  cd ..
 1308  git clone git@github.com:aureamunoz/dekorate-for-devoxx-fr-2022.git
 1309  mvn clean install
 1310  git push origin main
 1311  unset KUBECONFIG
 1312  ./kcp.sh clean
 1313  kind delete cluster --name cluster1
 1314  kind get cluster
 1315  kind get clusters
 1316  curl https://skupper.io/install.sh | sh
 1317  skupper status
 1318  ll
 1319  ll skupper
 1320  ll _tmp
 1321  rm -rf skupper
 1322  curl https://skupper.io/install.sh | sh
 1323  ll
 1324  cd ~/tools
 1325  ll
 1326  tar -xf skupper-cli-1.0.2-linux-amd64.tgz
 1327  tar -xf skupper-cli-1.0.2-mac-amd64.tgz
 1328  ll
 1329  sudo mv skupper /usr/local/bin/
 1330  skupper version
 1331  sudo skupper version
 1332  htoken
 1333  git pull -r
 1334  git co main
 1335  git pull -r
 1336  ll
 1337  git co main
 1338  git fetch --all
 1339  git pull -r
 1340  mvn clean install -DskipTests -DskipITs
 1341  htoken
 1342  ll
 1343  tar -xf darwin-arm64.zip
 1344  ll
 1345  sudo mv skupper /usr/local/bin/
 1346  skupper version
 1347  skupper status
 1348  skupper version
 1349  kubectl create namespace west
 1350  kind get clusters
 1351  kind delete cluster kind
 1352  kind 
 1353  kind delete cluster --name kind
 1354  kind create cluster --name kind
 1355  kubectl create namespace west
 1356  kubectx
 1357  kubectl config set-context --current --namespace west
 1358  content_copy\nkubectl create namespace east
 1359  kubectl config set-context --current --namespace east
 1360  skupper status
 1361  export KUBECONFIG=$HOME/.kube/config-west
 1362  export KUBECONFIG=$HOME/.kube/config-east
 1363  skupper status
 1364  skupper init
 1365  helm upgrade --install ingress-nginx ingress-nginx \\n  --repo https://kubernetes.github.io/ingress-nginx \\n  --namespace ingress --create-namespace \\n  --set controller.service.type=NodePort \\n  --set controller.extraArgs.enable-ssl-passthrough= \\n  --set controller.hostPort.enabled=true
 1366  k rollout status deployment/ingress-nginx-controller -n ingress
 1367  skupper init --ingress nginx-ingress-v1 --ingress-host 1.1.1.1.sslip.io
 1368  skupper init
 1369  skupper delete first
 1370  skupper delete
 1371  skupper init --ingress none
 1372  skupper init --ingress none 
 1373  kubectl config set-context --current --namespace west
 1374  skupper init --ingress none 
 1375  kubectx
 1376  kubens
 1377  skupper token create ~/west.token
 1378  skupper link create ~/west.token
 1379  kubectl create deployment frontend --image quay.io/skupper/hello-world-frontend
 1380  kubectl create deployment backend --image quay.io/skupper/hello-world-backend --replicas 3
 1381  skupper expose deployment/backend --port 8080
 1382  kubectl get service/backend
 1383  kubectl expose deployment hello-world-frontend --port 8080 --type LoadBalancer
 1384  k get deployments
 1385  k get pods
 1386  kubectl expose deployment frontend --port 8080 --type LoadBalancer
 1387  k get services
 1388  curl http://10.96.85.49:8080/api/health
 1389  k get services
 1390  git clone git@github.com:aureamunoz/skupper-website.git
 1391  cd skupper-website
 1392  source ~/.zshrc
 1393  idea .
 1394  cd
 1395  cd ..
 1396  ll
 1397  ll Applications
 1398  ll Applications/IntelliJ\ IDEA.app
 1399  ll Applications/IntelliJ\ IDEA.app/Contents
 1400  ll Applications/IntelliJ\ IDEA.app/Contents/bin
 1401  ll Applications/IntelliJ\ IDEA.app/Contents/
 1402  ll Applications/IntelliJ\ IDEA.app/Contents/MacOS
 1403  source ~/.zshrc
 1404  cd code
 1405  cd Users/auri/code
 1406  ll
 1407  cd skupper-website
 1408  idea .
 1409  source ~/.zshrc
 1410  idea .
 1411  source ~/.zshrc
 1412  idea .
 1413  cd ..
 1414  git clone git@github.com:aureamunoz/skupper-docs.git
 1415  cd skupper-docs
 1416  idea .
 1417  k get services
 1418  kubectl get cluster-info
 1419  kubectl cluster-info
 1420  cd ..
 1421  cd kcp
 1422  ll
 1423  git pull -r
 1424  ll
 1425  kubectl cluster-info
 1426  HOST_MACHINE=127.0.0.1 ./skupper/scenario-1.sh
 1427  brew install pv
 1428  HOST_MACHINE=127.0.0.1 ./skupper/scenario-1.sh
 1429  brew install jq
 1430  HOST_MACHINE=127.0.0.1 ./skupper/scenario-1.sh
 1431  git checkout -b add-jq-warning
 1432  git push auri add-jq-warning
 1433  k get services
 1434  k get ingress
 1435  k get pods
 1436  cd ..
 1437  cd rhte_lab_2019
 1438  idea .
 1439  ll
 1440  ll .git
 1441  cd ..
 1442  git clone git@github.com:grs/skupper-kcp-demo.git
 1443  cd skupper-kcp-demo
 1444  kind get clusters
 1445  kind create cluster --name cluster1
 1446  kind create cluster --name cluster2
 1447  kind delete cluster --name cluster2
 1448  kind delete cluster --name cluster1
 1449  kind create cluster --name cluster-1
 1450  kind create cluster --name cluster-2
 1451  kind get clusters
 1452  kubectl --kubeconfig cluster-1.kubeconfig apply -f skupper-crds.yaml
 1453  echo $KUBECONFIG
 1454  kubectl --kubeconfig cluster-1.kubeconfig apply -f skupper-crds.yaml
 1455  unset KUBECONFIG
 1456  kubectl --kubeconfig cluster-1.kubeconfig apply -f skupper-crds.yaml
 1457  kubectl --kubeconfig  ~/.kube/cluster-1.kubeconfig apply -f skupper-crds.yaml
 1458  kubectl --kubeconfig  ~/.kube/cluster-1.kubeconfig apply -f skupper-site-controller.yaml
 1459  kubectl --kubeconfig  ~/.kube/cluster-2.kubeconfig apply -f skupper-crds.yaml
 1460  kubectl --kubeconfig  ~/.kube/cluster-2.kubeconfig apply -f skupper-site-controller.yaml
 1461  kcp start
 1462  cd code
 1463  cd kcp
 1464  git co main
 1465  git pull -r
 1466  ll
 1467  ll _tmp
 1468  ll kcp
 1469  ll
 1470  ll .kcp
 1471  kcp start
 1472  ll
 1473  kcp start
 1474  KUBECONFIG=.kcp/admin.kubeconfig kubectl kcp workload sync cluster-1 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ./cluster-1.kubeconfig apply -f -
 1475  KUBECONFIG=.kcp/admin.kubeconfig kubectl kcp workload sync cluster-1 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ~/.kube/cluster-1.kubeconfig apply -f -
 1476  htoken
 1477  ll
 1478  cd Code
 1479  cd kcp
 1480  ll
 1481  ll .kcp
 1482  cd .kcp
 1483  pwd
 1484  KUBECONFIG=/Users/auri/Code/kcp/.kcp/admin.kubeconfig kubectl kcp workload sync cluster-1 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ~/.kube/cluster-1.kubeconfig apply -f -
 1485  ll
 1486  cd ..
 1487  ll
 1488  ll _tmp
 1489  ll kcp
 1490  ./kcp/scenario-1.sh
 1491  ll
 1492  source ~/.zshrc
 1493  echo $KUBECONFIG
 1494  kind get clusters
 1495  cd kcp
 1496  ./scenario-
 1497  ./scenario-1.sh
 1498  ll
 1499  ll _tmp
 1500  ll _tmp/.kcp
 1501  cd _tmp/.kcp
 1502  pwd
 1503  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync cluster-1 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ~/.kube/cluster-1.kubeconfig apply -f -
 1504  history
 1505  ll
 1506  cd ..
 1507  ll
 1508  cd ..
 1509  ll
 1510  ./server.sh status
 1511  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl workspaces create skupper-demo --enter
 1512  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync cluster-1 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ~/.kube/cluster-1.kubeconfig apply -f -
 1513  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync cluster-2 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ./cluster-2.kubeconfig apply -f -
 1514  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl label synctarget/cluster-1 category=oneD
 1515  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl get placements
 1516  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl get locations
 1517  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl label synctarget/cluster-2 category=two
 1518  ll
 1519  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f locations.yaml
 1520  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f placements.yaml
 1521  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl delete location default
 1522  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl delete placement default
 1523  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f skupper-network-controller.yaml\n
 1524  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f namespaces.yaml
 1525  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f bookinfo_one.yaml
 1526  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f bookinfo_two.yaml
 1527  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f bookinfo_one_skupper.yaml
 1528  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl apply -f bookinfo_two_skupper.yaml
 1529  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl get synctarget
 1530  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl get pods
 1531  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl get deployments
 1532  cd ..
 1533  mkdir service-box-toolkit
 1534  cd service-box-toolkit
 1535  git init
 1536  git add README.md
 1537  echo "# service-box-toolkit" >> README.md
 1538  git add README.md
 1539  git commit -m "first commit"
 1540  git branch -M main
 1541  git remote add origin git@github.com:aureamunoz/service-box-toolkit.git
 1542  git push -u origin main
 1543  idea .
 1544  git reset HEAD^
 1545  git checkout -b draft-svc-claim-thoughts
 1546  git init
 1547  git aa
 1548  git rm --cached svc-claim.yaml 
 1549  git st
 1550  git commit -m "first commit"
 1551  git branch -M main
 1552  git remote add origin git@github.com:halkyonio/servicebox-toolkit.git
 1553  git push -u origin main
 1554  git checkout -b draft-svc-claim-thoughts
 1555  git add svc-claim.yaml
 1556  git st
 1557  git lg
 1558  git push origin draft-svc-claim-thoughts
 1559  git pull -r
 1560  git checkout -b setup-mkdocs
 1561  mkdocs serve
 1562  pipenv run mkdocs serve
 1563  ll /Users/auri/Library/Python/3.8/bin/pipenv
 1564  ll /Users/auri/Library/Python/3.8/bin
 1565  pip3 install pipenv
 1566  pipenv install
 1567  cd ..
 1568  cd smallrye-load-balancer
 1569  cd docs
 1570  pipenv run mkdocs serve
 1571  source ~/.zshrc
 1572  echo $PATH
 1573  pipenv run mkdocs build
 1574  cd docs
 1575  pipenv run mkdocs build
 1576  cd ..
 1577  cd barco
 1578  cd docs
 1579  pipenv run mkdocs build
 1580  pipenv run mkdocs serve
 1581  history
 1582  pip3 install pipenv
 1583  pipenv install
 1584  which pipenv
 1585  pipenv run mkdocs serve
 1586  pip3 install mkdocs
 1587  pip3 install mkdocs-material
 1588  pip3 install mkdocs-macros-plugin
 1589  pip3 install mkdocs-build-plantuml-plugin
 1590  pip3 install mike 
 1591  pipenv run mkdocs serve
 1592  k get pvc -A et k get pv
 1593  cd tools
 1594  tar -xf openshift-client-linux.tar.gz
 1595  ll
 1596  sudo mv oc /usr/local/bin/
 1597  pipenv run mkdocs serve
 1598  cd ..
 1599  git clone git@github.com:aureamunoz/quarkus-zero-to-serverless-guide.git
 1600  cd quarkus-zero-to-serverless-guide
 1601  mvn package -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel:22.2-java11
 1602  ll
 1603  ll apps
 1604  ll apps/fruit-service-quarkus
 1605  cd apps/fruit-service-quarkus
 1606  mvn package -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel:22.2-java11
 1607  htoken
 1608  pipenv update
 1609  pipenv run mkdocs serve
 1610  vi .git/config
 1611  ll .git
 1612  ll
 1613  cd ..
 1614  vi .git/config
 1615  git push auri setup-mkdocs 
 1616  git co main
 1617  git pull -r
 1618  git co setup-mkdocs 
 1619  cd docs
 1620  pipenv run mkdocs serve
 1621  git push auri setup-mkdocs
 1622  cd ..
 1623  git pull -r
 1624  mvn clean install -DskipTests
 1625  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1626  cd ..
 1627  cd code
 1628  git clone git@github.com:fabric8io/kubernetes-client.git
 1629  ll
 1630  cd kubernetes-client
 1631  idea .
 1632  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1633  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1634  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1635  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest -Dmaven.surefire.debug
 1636  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1637  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1638  mvn -X test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1639  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1640  mvn -X test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1641  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1642  CC
 1643  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1644  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1645  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1646  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1647  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1648  mvn clean install -DskipTests
 1649  mvn clean install
 1650  mvn clean install -pl service-discovery/kubernetes
 1651  htoken
 1652  git reset HEAD^
 1653  git checkout -b improve-cache-368
 1654  mvn clean install -pl service-discovery/kubernetes
 1655  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1656  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1657  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1658  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1659  mvn clean install -DskipTests
 1660  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1661  mvn clean install -DskipTests
 1662  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1663  mvn clean install -DskipTests
 1664  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1665  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1666  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1667  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1668  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1669  htoken
 1670  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1671  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest -Dmaven.surefire.debug
 1672  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1673  git fetch --all
 1674  git co main
 1675  git pull -r
 1676  git fetch origin pull/28296/head:pr-28296
 1677  git co pr-28296
 1678  git rebase main
 1679  mvn clean install -Dquickly
 1680  mvn co main
 1681  git  co main
 1682  git pull -r
 1683  git co pr-28296
 1684  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork
 1685  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1686  ./mvnw test -f ,integration-tests/rest-client-reactive-stork -Dtest=StorkIntegrationTest
 1687  mvn test -f ,integration-tests/rest-client-reactive-stork -Dtest=StorkIntegrationTest
 1688  mvn test -f integration-tests/rest-client-reactive-stork -Dtest=StorkIntegrationTest
 1689  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment
 1690  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=StorkIntegrationTest
 1691  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork
 1692  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1693  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest
 1694  mvnDebug test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest
 1695  mvnDebug test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest -Dsuspend
 1696  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest -Dsuspend
 1697  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest -Dmaven.surefire.debug
 1698  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest
 1699  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment
 1700  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dquickly
 1701  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest
 1702  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest -Dmaven.surefire.debug
 1703  mvn clean install -pl extensions/resteasy-reactive -Dquickly
 1704  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive -Dquickly
 1705  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dquickly
 1706  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/runtime -Dquickly
 1707  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest 
 1708  mvn clean install -Dquickly
 1709  mvn test -pl extensions/resteasy-reactive/rest-client-reactive/deployment -Dtest=InvalidURITest 
 1710  vi .git/config
 1711  git push origin pr-28296
 1712  vi .git/config
 1713  git fetch --all
 1714  git co main
 1715  git pull -r
 1716  git co pr-28296
 1717  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork
 1718  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1719  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1720  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1721  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1722  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1723  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest -Dmaven.surefire.debug
 1724  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1725  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest -Dmaven.surefire.debug
 1726  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1727  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1728  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryTest
 1729  git co main
 1730  git pull -r
 1731  mvn clean install
 1732  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest -Dmaven.surefire.debug
 1733  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1734  KUBECONFIG=~/Code/kcp/kcp/_tmp/.kcp/admin.kubeconfig kubectl kcp workload sync cluster-2 --syncer-image ghcr.io/kcp-dev/kcp/syncer:release-0.7 --resources=services,sites.skupper.io,requiredservices.skupper.io,providedservices.skupper.io -o - | kubectl --kubeconfig ./cluster-2.kubeconfig apply -f -
 1735  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1736  git branch
 1737  git co improve-cache-368
 1738  mvn clean install
 1739  git push auri improve-cache-368
 1740  git co main
 1741  git pull -r
 1742  mvn clean install -DskipTests
 1743  mvn test -pl service-discovery/kubernetes -Dtest=KubernetesServiceDiscoveryCacheTest
 1744  htoken
 1745  cd mkdocs
 1746  cd docs
 1747  ll
 1748  pipenv run mkdocs serve
 1749  git checkout -b fix-docs
 1750  git checkout -b fix-csd-doc
 1751  git push auri fix-csd-doc
 1752  git co main
 1753  git pull -r
 1754  git co improve-cache-368
 1755  git rebase main
 1756  htoken
 1757  git push auri -f improve-cache-368
 1758  mvn clean install -DskipTests
 1759  mvn clean install
 1760  mvn formatter:format
 1761  mvn formatter:validate
 1762  mvn compile
 1763  cd ..
 1764  mvn clean install
 1765  mvn clean install -DskipTests
 1766  mvn formatter:validate
 1767  git push auri improve-cache-368
 1768  cd ..
 1769  mvn io.quarkus:quarkus-maven-plugin:2.13.0.Final:create \\n  -DprojectGroupId="com.redhat.atomic.fruit" \\n  -DprojectArtifactId="atomic-fruit-service" \\n  -DprojectVersion="1.0-SNAPSHOT" \\n  -DclassName="FruitResource" \\n  -Dpath="fruit"
 1770  ll
 1771  cd quarkus-zero-to-serverless-guide
 1772  ll
 1773  mvn clean package
 1774  cd ..
 1775  cd smallrye-load-balancer
 1776  git co main
 1777  git fetch -all
 1778  git fetch --all
 1779  git pull -r
 1780  mvn clean install
 1781  git pull -r
 1782  mvn clean install
 1783  git pull -r
 1784  git checkout -b prepare-release-1.3.0
 1785  git remote -v 
 1786  git push origin prepare-release-1.3.0
 1787  git co main
 1788  git pull -r
 1789  git checkout -b fix-publication-docs
 1790  git push auri fix-publication-docs
 1791  htoken
 1792  gi
 1793  git fetch --all
 1794  git pull -r
 1795  git co main
 1796  git fetch --all
 1797  git pull -r
 1798  git checkout -b bump-stork
 1799  mvn clean install -Dquickly 
 1800  git rebase main
 1801  mvn clean install -Dquickly 
 1802  git co main
 1803  git pull -r
 1804  git fetch --all
 1805  git pull -r
 1806  mvn clean install -Dquickly 
 1807  mvn clean install -Dquickly
 1808  git pull -r
 1809  mvn clean install -Dquickly
 1810  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive -Dquickly
 1811  mvn clean install -Dquickly
 1812  git pull -r
 1813  mvn clean install -Dquickly
 1814  ll /Users/auri/.m2/repository/io/vertx
 1815  ll /Users/auri/.m2/repository/io/vertx/vertx-core
 1816  ll /Users/auri/.m2/repository/io/vertx/vertx-core/4.3.4
 1817  rm -rf  /Users/auri/.m2/repository/io/vertx/vertx-core/4.3.4
 1818  ll /Users/auri/.m2/repository/io/vertx/vertx-core/4.3.4
 1819  mvn clean install -Dquickly
 1820  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
 1821  mvn clean install -pl grpc-health,grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls
 1822  mvn clean install -pl grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls
 1823  cd integration-tests
 1824  mvn clean install -pl grpc-health,grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls
 1825  cd ..
 1826  git checkout -b bump-stork
 1827  git checkout bump-stork
 1828  git rebase main
 1829  git push auri bump-stork
 1830  htoken
 1831  git co main
 1832  cd ..
 1833  git fetch --all
 1834  git pull -r
 1835  git branch
 1836  git co setup-mkdocs 
 1837  git rebase main
 1838  cd docs
 1839  pipenv run mkdocs serve
 1840  cd ..
 1841  pipenv run mkdocs serve
 1842  git remote -v 
 1843  git push auri -f setup-mkdocs
 1844  git co main
 1845  git fetch --all
 1846  git pull -r
 1847  sdk install quakus
 1848  sdk install quarkus
 1849  quarkus --version
 1850  mvn clean
 1851  kind
 1852  kind get clusters
 1853  kind delete cluster --name kind
 1854  echo $KUBECONFIG
 1855  kubectl config current-context
 1856  kubectl config view
 1857  kind clusters
 1858  kind get clusters
 1859  k get pods
 1860  kind create cluster
 1861  kubectl config view
 1862  kubectl config current-context
 1863  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
 1864  git co main
 1865  git pull -r
 1866  ll
 1867  k apply -f k8s.yaml
 1868  k delete -f k8s.yaml 
 1869  kubectl create namespace development
 1870  kubectl apply -f k8s.yaml -n=development
 1871  k get pods
 1872  k get pods -n developement
 1873  k get service -n developement
 1874  k get service -n development
 1875  k get pods -n development
 1876  k get ingress -n development
 1877  kubectl apply -f k8s.yaml -n=development
 1878  kubectl apply -f https://kind.sigs.k8s.io/examples/ingress/usage.yaml
 1879  cd ..
 1880  cd kcp
 1881  ll
 1882  ll kcp
 1883  git remote -v 
 1884  which kind
 1885  cd ..
 1886  ll
 1887  git clone git@github.com:snowdrop/k8s-infra.git
 1888  cd k8s-infra
 1889  ll
 1890  git pull -r
 1891  cd kind
 1892  ll
 1893  ./kind-reg-ingress.sh
 1894  kind create cluster
 1895  k get pods
 1896  cat <<EOF | kind create cluster --config=-\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: "ingress-ready=true"\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 443\n    hostPort: 443\n    protocol: TCP\nEOF
 1897  kind delete cluster --name kind
 1898  cat <<EOF | kind create cluster --config=-\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: "ingress-ready=true"\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 443\n    hostPort: 443\n    protocol: TCP\nEOF
 1899  docker version
 1900  docker
 1901  git pull -r
 1902  mvn clean install -Dquickly
 1903  mvn clean install
 1904  mvn clean install -Dnative
 1905  java -version
 1906  sdk use java 22.2.r17-grl
 1907  java -version
 1908  mvn clean install -Dnative
 1909  mvn dependency:tree > deps.txt
 1910  git pull -r
 1911  mvn dependency:tree > deps.txt
 1912  mvn clean install -Dnative
 1913  mvn clean install -Dquickly
 1914  mvn clean install -Dnative
 1915  git pull -r
 1916  mvn clean install
 1917  mvn clean install -DskipTests
 1918  mvn clean install -Dquickly
 1919  mvn clean install -Dnative
 1920  mvn dependency:tree > deps.txt
 1921  mvn clean install -Dnative
 1922  mvn clean install -DskipTests
 1923  mvn clean install -Dquickly
 1924  mvn dependency:tree > deps.txt
 1925  mvn clean install -Dquickly
 1926  mvn clean install -Dnative
 1927  mvn dependency:tree > deps.txt
 1928  mvn dependency:tree > deps-client.txt
 1929  mvn dependency:tree > deps-stork.txt
 1930  mvn clean install -DskipTests
 1931  mvn dependency:tree > deps-after.txt
 1932  mvn clean install -Dquickly
 1933  mvn dependency:tree > deps-after.txt
 1934  mvn clean install -Dnative
 1935  mvn clean install -DskipTests
 1936  mvn clean install -Dquickly
 1937  mvn clean install -Dnative
 1938  mvn dependency:tree > deps-after.txt
 1939  mvn dependency:tree > deps.txt
 1940  git co main
 1941  git pull -r
 1942  mvn dependency:tree > deps-2.13.1.txt
 1943  mvn clean install -Dnative
 1944  mvn dependency:tree > deps-2.13.1.txt
 1945  git fetch --all
 1946  git pull -r
 1947  git fetch --help
 1948  git fetch --tags 
 1949  mvn clean install -Dquickly
 1950  ll
 1951  ./kind-reg-ingress.sh
 1952  lsof -i tcp:443
 1953  ps -eaf 
 1954  ./kind-reg-ingress.sh
 1955  docker ps
 1956  kind get clusters
 1957  kind delete cluster --name skupper
 1958  kind get clusters
 1959  docker ps
 1960  ./kind-reg-ingress.sh
 1961  docker ps
 1962  kind get clusters
 1963  kind delete cluster --name kind
 1964  kind create cluster
 1965  kubectl cluster-info --context kind-kind
 1966  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
 1967  cd ..
 1968  cd smallrye-load-balancer
 1969  kubectl create namespace development
 1970  kubectl apply -f k8s.yaml -n=development
 1971  docker ps
 1972  cat <<EOF | kind create cluster --config=-\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: "ingress-ready=true"\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 6443\n    hostPort: 6443\n    protocol: TCP\nEOF
 1973  kind delete cluster --name kind
 1974  cat <<EOF | kind create cluster --config=-\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: "ingress-ready=true"\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 6443\n    hostPort: 6443\n    protocol: TCP\nEOF
 1975  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
 1976  kubectl create namespace development
 1977  kubectl apply -f k8s.yaml -n=development
 1978  git co main
 1979  git pull -r
 1980  mvn clean install -Dquickly
 1981  git co development
 1982  mvn quarkus:dev
 1983  ./mvnw quarkus:add-extension -Dextensions="io.quarkus:quarkus-kubernetes-client"
 1984  mvn quarkus:add-extension -Dextensions="io.quarkus:quarkus-kubernetes-client"
 1985  mvn quarkus:dev
 1986  cd ..
 1987  quarkus create -h
 1988  quarkus create app -h
 1989  quarkus create app
 1990  ll
 1991  cd code-with-quarkus
 1992  idea .
 1993  mvn compile
 1994  mvn quarkus:dev
 1995  quarkus build
 1996  docker images
 1997  kubectl create namespace test
 1998  kubectl apply -f target/kubernetes/kubernetes.json -n=test
 1999  kubectl apply -f target/kubernetes/kubernetes.yml -n=test
 2000  k get pods -n=test
 2001  mvn clean package
 2002  docker login quay.io
 2003  mvn clean package
 2004  kubectl apply -f target/kubernetes/kubernetes.yml -n=test
 2005  kubectl delete -f target/kubernetes/kubernetes.yml -n=test
 2006  kubectl apply -f target/kubernetes/kubernetes.yml -n=test
 2007  k get pods -n=test
 2008  k describe hello-service.127.0.0.1.nip.io
 2009  k describe code-with-quarkus-8487b99d47-85lmn
 2010  k describe pod code-with-quarkus-8487b99d47-85lmn
 2011  k get pods -n=test
 2012  k describe pod code-with-quarkus-8487b99d47-85lmn -n=test
 2013  docker pull quay.io/amunozhe/code-with-quarkus:1.0.0
 2014  k get pods -n=test
 2015  k logs code-with-quarkus-8487b99d47-85lmn -n=test
 2016  k get pods -n=test
 2017  kubectl delete -f target/kubernetes/kubernetes.yml -n=test
 2018  kubectl apply -f target/kubernetes/kubernetes.yml -n=test
 2019  k get pods -n=test
 2020  k get services -n=test
 2021  k get endpoints code-with-quarkus -n=test
 2022  mvn clean package
 2023  ll target
 2024  ll target/quarkus-app
 2025  ll target/quarkus-app/app
 2026  java -jar target/quarkus-run.jar
 2027  mvn quarkus:dev
 2028  git fetch --tags 
 2029  git pull -r
 2030  mvn clean install -Dquickly
 2031  git pull -r
 2032  mvn clean install
 2033  mvn clean install -Dnative
 2034  sdk use java 22.2.r17-grl
 2035  mvn clean install -Dnative
 2036  git co main
 2037  git pull -r
 2038  mvn clean install -Dnative
 2039  cd stork-kubernetes-quickstart
 2040  mvn dependency:tree > deps-2.13.2.txt
 2041  git fetch --tags 
 2042  git checkout -b 2.13.2.Final 2.13.2.Final
 2043  git fetch --tags 
 2044  git checkout -b 1.1.2 1.1.2
 2045  git co 1.1.2
 2046  gir branch -d 1.1.2
 2047  git branch -d 1.1.2
 2048  git co main
 2049  git branch -d 1.1.2
 2050  git checkout -b 1.1.2 1.1.2
 2051  git co development 
 2052  git pull -r
 2053  git co main
 2054  mvn clean install -Dquickly
 2055  git pull -r
 2056  mvn clean install -Dquickly
 2057  mvn dependency:tree > deps.txt
 2058  git co main 
 2059  git checkout -b 1.3.0 1.3.0
 2060  git co development 
 2061  mvn clean install -Dnative
 2062  mvn dependency:tree > deps-999.txt
 2063  cd ..
 2064  cd stork-quickstart
 2065  mvn clean install
 2066  ps -eaf 
 2067  lsof -i tcp:8080
 2068  mvn clean install
 2069  mvn dependency:tree > deps-999.txt
 2070  cd ..
 2071  cd stork-reproducer-quickstart
 2072  mvn clean package -DskipTests
 2073  cd ..
 2074  quarkus create app org.acme:stork-quickstart \\n    --extension='quarkus-rest-client-reactive,quarkus-resteasy-reactive' \\n    --no-code\ncd stork-quickstart
 2075  ll
 2076  idea :
 2077  idea .
 2078  git co main
 2079  mvn clean install -DskipTests
 2080  mvn test
 2081  mvn test -pl service-discovery/dns -Dtest=DnsServiceDiscoveryTest -Dmaven.surefire.debug
 2082  docker ps
 2083  cd ..
 2084  rm -rf stork-quickstart
 2085  quarkus create app org.acme:rest-client-quickstart \\n    --extension='resteasy,resteasy-jackson,rest-client,rest-client-jackson' \\n    --no-code\ncd rest-client-quickstart
 2086  idea .
 2087  cd ..
 2088  cd rest-client-quickstart
 2089  mvn clean install -DskipTests
 2090  mvn clean install 
 2091  ll
 2092  ll target
 2093  mvn clean install -DskipTests
 2094  cd stork-reproducer-quickstart
 2095  mvn clean install -DskipTests
 2096  mvn quarkus:dev
 2097  docker ps
 2098  docker run --rm --name consul -p 8500:8500 -p 8501:8501 consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2099  mvn quarkus:dev
 2100  mvn test -pl service-discovery/dns -Dtest=DnsServiceDiscoveryTest -Dmaven.surefire.debug
 2101  docker ps
 2102  mvn quarkus:dev
 2103  docker ps
 2104  lsof -i tcp:8080
 2105  lsof -i tcp:8500
 2106  mvn quarkus:dev
 2107  docker run --rm --name consul -p 8500:8500 -p 8501:8501 consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2108  docker ps
 2109  mvn test -pl service-discovery/dns -Dtest=DnsServiceDiscoveryTest -Dmaven.surefire.debug
 2110  docker ps
 2111  mvn test -pl service-discovery/dns -Dtest=DnsServiceDiscoveryTest -Dmaven.surefire.debug
 2112  docker ps
 2113  docker run --rm --name consul -p 8500:8500 -p 8600:8600/udp consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8500
 2114  docker run --rm --name consul -p 8500:8500 -p 8600:8600/udp consul:1.7 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2115  docker ps
 2116  docker exec consul consul members
 2117  mvn quarkus:dev
 2118  docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id
 2119  docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' consul
 2120  mvn quarkus:dev
 2121  clear
 2122  docker run \\n    -d \\n    -p 8500:8500 \\n    -p 8600:8600/udp \\n    consul agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
 2123  docker ps
 2124  docker stop 3a4bb0b361dd
 2125  docker rm 3a4bb0b361dd
 2126  docker ps
 2127  docker run --rm --name consul -p 8500:8500 -p 8600:8600/udp consul:1.9 agent -server -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8500
 2128  docker run --rm --name consul -p 8500:8500 -p 8600:8600/udp consul:1.9 agent -server -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2129  docker ps
 2130  mvn quarkus:dev
 2131  docker ps
 2132  docker run --rm --name consul -p 8500:8500 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8500\n
 2133  docker run --rm --name consul -p 8500:8500 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2134  docker ps
 2135  mvn quarkus:dev
 2136  mvn clean package
 2137  mvn clean package -DskipTests
 2138  mvn quarkus:dev
 2139  docker exec consul consul members
 2140  docker run \\n   --name=fox \\n   consul agent -node=client-1 -join=172.17.0.3
 2141  docker exec consul consul members
 2142  dig @127.0.0.1 -p 8600 my-service.service.consul
 2143  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul
 2144  mvn quarkus:dev
 2145  cd ..
 2146  quarkus create app io.servicebox:servicebox \\n    --extension='resteasy-reactive'
 2147  cd service
 2148  cd servicebox
 2149  ll
 2150  idea .
 2151  docker ps
 2152  dig @127.0.0.1 -p 8600 my-service
 2153  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul
 2154  docker ps
 2155  mvn test -pl service-discovery/dns -Dtest=DnsServiceDiscoveryTest -Dmaven.surefire.debug
 2156  docker ps
 2157  docker run \\n   --name=fox \\n   consul agent -node=client-1 -join=172.17.0.3
 2158  docker ps
 2159  docker exec badger consul members
 2160  docker exec consul consul members
 2161  docker exec f838fbcef745 consul members
 2162  docker run \\n   --name=fox \\n   consul agent -node=client-1 -join=127.0.0.1
 2163  docker run \\n   --name=client-consul \\n   consul agent -node=client-1 -join=127.0.0.1
 2164  docker exec f838fbcef745 consul members
 2165  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul
 2166  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul ANY
 2167  cd ..
 2168  cd stork
 2169  cd stork-quickstart
 2170  docker ps
 2171  docker run --rm --name consul -p 8500:8500 -p 8501:8501 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2172  docker pull hashicorp/counting-service:0.0.2
 2173  docker run \\n   -p 9001:9001 \\n   -d \\n   --name=weasel \\n   hashicorp/counting-service:0.0.2
 2174  docker exec fox /bin/sh -c "echo '{\"service\": {\"name\": \"counting\", \"tags\": [\"go\"], \"port\": 9001}}' >> /consul/config/counting.json"
 2175  docker ps
 2176  docker ps stop 8b52f8c4669c
 2177  docker stop 8b52f8c4669c
 2178  docker rm 8b52f8c4669c
 2179  docker ps
 2180  mvn quarkus:dev
 2181  docker ps
 2182  docker run --rm --name consul -p 8500:8500 -p 8501:8501 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2183  cd stork-reproducer-quickstart
 2184  mvn quarkus:dev
 2185  docker exec consul consul services register -name one -address 10.0.0.1
 2186  docker exec consul consul services register -name two -address 10.0.0.2
 2187  docker exec consul consul services register -name three -address 10.0.0.3
 2188  dig @127.0.0.1 -p 8600 one.service.consul.
 2189  dig @127.0.0.1 -p 8600 one.service.consul
 2190  dig @127.0.0.1 -p 8600 auri.service.consul
 2191  dig @127.0.0.1 -p 8600 one.service.consul
 2192  dig @127.0.0.1 -p 8600 two.service.consul
 2193  dig @127.0.0.1 -p 8600 my-service.service.consul
 2194  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul
 2195  cd ..
 2196  cd stork-dns-quickstart
 2197  cd ..
 2198  ll
 2199  cd stork-dns-quickstart
 2200  git checkout -b stork-dns
 2201  mvn quarkus:dev
 2202  git remote -v 
 2203  git push auri stork-dns
 2204  mvn quarkus:dev
 2205  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=my-groupId \\n    -DprojectArtifactId=my-artifactId
 2206  'netstat -anv | grep 8080'
 2207  netstat -anv | grep 8080
 2208  mvn quarkus:dev
 2209  cd
 2210  cd Code
 2211  mkdir tmp
 2212  cd tmp
 2213  mvn archetype:generate -DgroupId=io.servicebox -DartifactId=service-box
 2214  ll
 2215  cd service-box
 2216  ll
 2217  idea .
 2218  cd ..
 2219  ll
 2220  ll service-box-toolkit
 2221  mv servicebox servicebox-poc
 2222  ll
 2223  cd servicebox-poc
 2224  ll
 2225  rm -rf .idea
 2226  ll
 2227  idea .
 2228  git init
 2229  vi .git
 2230  vi .git/config
 2231  quarkus create app io.halkyon:servicebox \\n--extension='resteasy-reactive'
 2232  mvn clean install
 2233  cd servicebox-app
 2234  mvn quarkus:dev
 2235  git aa
 2236  git checkout -b first-steps
 2237  git push auri first-steps
 2238  git co main
 2239  git fetch --all
 2240  git co main
 2241  git checkout --track origin/main
 2242  git pull -r
 2243  git co first-steps
 2244  git rebase main
 2245  git rebase --continue
 2246  git push auri -f first-steps
 2247  docker ps
 2248  pipenv run mkdocs serve
 2249  cd docs/
 2250  pipenv run mkdocs serve
 2251  htoken
 2252  git fetch --tags 
 2253  git checkout -b 2.13.0.Final 2.13.0.Final
 2254  cd ..
 2255  git fetch --tags 
 2256  git fetch --qll
 2257  git fetch --all
 2258  git checkout 1.1.2
 2259  mvn clean install
 2260  docker run --rm --name consul -p 8500:8500 -p 8501:8501 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2261  docker ps
 2262  mvn quarkus:dev
 2263  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul
 2264  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul SRV
 2265  mvn quarkus:dev
 2266  docker run --rm --name consul -p 8500:8500 -p 8501:8501 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2267  mvn quarkus:dev
 2268  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul SRV
 2269  git co main
 2270  git pull -r
 2271  mvn clean install 
 2272  mvn dependency:tree > deps-999.txt
 2273  mvn clean install 
 2274  mvn dependency:tree > deps-999.txt
 2275  mvn clean install 
 2276  mvn dependency:tree > deps.txt
 2277  mvn clean install 
 2278  mvn dependency:tree > deps.txt
 2279  mvn clean install 
 2280  mvn dependency:tree > deps.txt
 2281  mvn clean install 
 2282  mvn dependency:tree > deps.txt
 2283  mvn clean install 
 2284  mvn clean install
 2285  git co stork-dns
 2286  mvn clean install
 2287  git co main
 2288  mvn clean install
 2289  dig @127.0.0.1 -p 8600 my-service.service.dc1.consul SRV
 2290  mvn quarkus:dev
 2291  mvn clean install
 2292  mvn quarkus:dev
 2293  docker run --rm --name consul -p 8500:8500 -p 8501:8501 -p 8600:8600/udp consul:1.9 agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
 2294  mvn quarkus:dev
 2295  mvn clean compile quarkus:dev
 2296  lsof -i tcp:9000
 2297  lsof -i tcp:9001
 2298  mvn clean install
 2299  git push auri stork-dns 
 2300  htoken
 2301  mvn clean install
 2302  git co main
 2303  git fetch --all
 2304  git pull -r
 2305  mvn clean
 2306  ll  ~/.m2/repository/io/quarkus
 2307  ll  ~/.m2/repository/io/quarkus/quarkus-smallrye-stork
 2308  ll  ~/.m2/repository/io/quarkus/quarkus-smallrye-stork/999-SNAPSHOT
 2309  ll  ~/.m2/repository/io/
 2310  mv  ~/.m2/repository/io/quarkus ~/.m2/repository/io/quarkus-backup
 2311  ll  ~/.m2/repository/io/
 2312  mvn clean install
 2313  ll  ~/.m2/repository/io/quarkus/
 2314  ll  ~/.m2/repository/io/quarkus/quarkus-smallrye-stork
 2315  mvn clean install
 2316  mvn dependency:tree > deps.txt
 2317  mvn quarkus:dev
 2318  git push auri stork-dns 
 2319  cd ..
 2320  git clone git@github.com:priyanknarvekar/rmq-consumer-stork.git
 2321  cd rmq-consumer-stork
 2322  mvn quarkus: dev
 2323  mvn quarkus:dev
 2324  mvn clean install
 2325  cd ..
 2326  git co development
 2327  git pull -r
 2328  cd hibernate-orm-panache-quickstart
 2329  mvn quarkus:dev
 2330  git pull -r
 2331  mvn clean install -Dquickly
 2332  mvn quarkus:dev
 2333  docker run -it --rm=true --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:13.3
 2334  git co main
 2335  git pull -r
 2336  git fetch --all
 2337  mvn clean install
 2338  mvn compile quarkus:dev
 2339  git fetch origin pull/5/head:pr-5
 2340  git co pr-5
 2341  git co main
 2342  git checkout -b claim-db-part
 2343  cd ..
 2344  cd servicebox-poc
 2345  ll
 2346  rm -rf .idea
 2347  htoken
 2348  cd servicebox-app
 2349  mvn quarkus:dev
 2350  http http://localhost:8080
 2351  curl http://localhost:8080/hello
 2352  git fetch --all
 2353  git pull -r
 2354  git fetch origin pull/389/head:pr-389
 2355  git co pr-389
 2356  mvn clean install -DskipTests
 2357  cd docs
 2358  pipenv run mkdocs serve
 2359  htoken
 2360  mvn quarkus:dev
 2361  mvn clean package
 2362  cd optaplanner-quickstart
 2363  mvn clean install
 2364  mvn quarkus:dev
 2365  mvn clean package
 2366  mvn clean install
 2367  mvn quarkus:dev
 2368  mvn clean install
 2369  ll
 2370  cd ..
 2371  ll
 2372  cd primaza-poc
 2373  ll
 2374  rm -rf .idea
 2375  git push auri claim-db-part
 2376  cd ..
 2377  git clone git@github.com:aureamunoz/getting-started-on-quarkus-demo.git
 2378  cd getting-started-on-quarkus-demo
 2379  ./mvnw package
 2380  java -jar target/quarkus-app/quarkus-run.jar
 2381  sdk use java 22.2.r17-grl
 2382  java -version
 2383  sdk list java 
 2384  sdk use java 17.0.4-tem
 2385  java -version
 2386  ./mvnw package -Pnative
 2387  ./mvnw install -Dnative -DskipTests -Dquarkus.native.container-build=true
 2388  sdk use java 22.2.r17-grl
 2389  sdk update
 2390  java -version
 2391  ./mvnw package -Dnative
 2392  ll target
 2393  ./target/getting-started-on-quarkus-demo-1.0.0-SNAPSHOT-runner
 2394  docker build -f src/main/docker/Dockerfile.native -t getting-started .
 2395  docker images
 2396  docker run -i --rm -p 8080:8080 getting-started
 2397  docker run -entrypoint="/bin/bash" -i --rm -p 8080:8080 getting-started
 2398  git push origin main
 2399  cd ..
 2400  mkdir demos
 2401  cd emos
 2402  cd demos
 2403  clear
 2404  quarkus create app org.acme:getting-started \\n    --extension='resteasy-reactive'
 2405  cd getting-started
 2406  ll
 2407  idea .
 2408  quarkus dev
 2409  mvn test
 2410  mvn clean package
 2411  ll target
 2412  java -jar target/quarkus-app/quarkus-run.jar
 2413  sdk use java 22.2.r17-grl
 2414  ./mvnw package -Dnative
 2415  ll target
 2416  ./target/getting-started-1.0.0-SNAPSHOT-runner
 2417  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 2418  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2419  git init
 2420  cd ..
 2421  ll
 2422  cd getting-started-on-quarkus-demo
 2423  ll
 2424  ll .git
 2425  cp .git/ ../demos/getting-started
 2426  cp -R .git/ ../demos/getting-started/
 2427  ll
 2428  rm -rf COMMIT_EDITMSG
 2429  rm -rf HEAD
 2430  rm -rf config
 2431  rm -rf description
 2432  rm -rf hooks
 2433  rm -rf index
 2434  rm -rf info
 2435  rm -rf logs
 2436  rm -rf objects
 2437  rm -rf packed-refs
 2438  rm -rf refs
 2439  ll
 2440  cp -R .git/ ../demos/getting-started/.git/
 2441  git push origin main
 2442  cd ..
 2443  mvn io.quarkus:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"
 2444  ll
 2445  cd spring-on-quarkus-demo
 2446  mvn quarkus:dev
 2447  curl -X DELETE localhost:8080/book/10
 2448  curl -X DELETE localhost:8080/book/50
 2449  http DELETE localhost:8080/book/10
 2450  mvn quarkus:dev
 2451  curl -X DELETE localhost:8080/book/6
 2452  curl -X DELETE localhost:8080/book/10
 2453  brew install httpie
 2454  source ~/.zshrc
 2455  http DELETE localhost:8080/book/10
 2456  ./mvnw package
 2457  java -jar target/quarkus-app/quarkus-run.jar.
 2458  ll
 2459  ll target
 2460  ll target/quarkus-app
 2461  java -jar target/quarkus-app/quarkus-run.jar
 2462  htoken
 2463  docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:14.5
 2464  ./mvnw package
 2465  ./mvnw clean package
 2466  java -jar target/quarkus-app/quarkus-run.jar
 2467  ./mvnw package -Pnative
 2468  java -version
 2469  sdk use java 22.2.r17-grl
 2470  ./mvnw package -Pnative
 2471  docker build -f src/main/docker/Dockerfile.native -t quarkus/spring-on-quarkus-demo .
 2472  docker run -i --net=host --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2473  docker ps -a
 2474  docker stop exec fb6a9c343b10
 2475  docker stop fb6a9c343b10
 2476  docker rm fb6a9c343b10
 2477  docker ps -a
 2478  docker rm fb6a9c343b10
 2479  docker rm 495923e2d08b
 2480  56e68d3c77e6
 2481  docker rm 56e68d3c77e6
 2482  docker run -i --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2483  docker logs
 2484  docker ps
 2485  docker events&\n
 2486  docker run -i --net=host --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2487  docker logs bae37cb0ee401d9fae0839a366598f840da55710443f7c803b32da72995d48e8
 2488  docker image
 2489  docker images
 2490  docker image inspect quarkus/spring-on-quarkus-demo:latest
 2491  docker build --platform 
 2492  docker build --help
 2493  docker build --platform linux/arm64 -f src/main/docker/Dockerfile.native -t quarkus/spring-on-quarkus-demo .
 2494  docker run -i --net=host --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2495  ps -eaf
 2496  kill -9 70434
 2497  docker build -f src/main/docker/Dockerfile.native -t quarkus/spring-on-quarkus-demo .
 2498  docker run -i --net=host --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2499  mvn clean package -Dnative
 2500  sdk use java 22.2.r17-grl
 2501  mvn clean package -Dnative
 2502  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 2503  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2504  git init
 2505  ll
 2506  rm -rf .git
 2507  git init
 2508  git remote add origin git@github.com:aureamunoz/spring-on-quarkus-demo.git
 2509  git aa
 2510  cd ..
 2511  git clone git@github.com:aureamunoz/spring-on-quarkus-demo.git
 2512  cd demos
 2513  cd spring-on-quarkus-demo
 2514  ll
 2515  rm -rf .git
 2516  mkdir .git
 2517  cp -R ../../spring-on-quarkus-demo/.git .git/
 2518  ll
 2519  mv .git/.git .
 2520  ll
 2521  rm -rf .git/
 2522  cp -R ../../spring-on-quarkus-demo/.git .
 2523  ./mvnw package -Pnative -Dquarkus.native.container-build=true
 2524  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.container-runtime=docker
 2525  ./mvnw install -Dnative -Dquarkus.native.container-runtime=docker
 2526  ps -eaf
 2527  kill -9 70435
 2528  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.container-runtime=docker
 2529  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.native.container-runtime=docker
 2530  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17
 2531  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 2532  docker images
 2533  docker build -f src/main/docker/Dockerfile.native -t quarkus/spring-on-quarkus-demo .
 2534  docker run -i --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2535  docker run --net=host -i --rm -p 8080:8080 quarkus/spring-on-quarkus-demo
 2536  docker images
 2537  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 2538  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2539  ll target/quarkus-app
 2540  ll target
 2541  ./target/spring-on-quarkus-demo-1.0.0-SNAPSHOT-runner
 2542  lsof -i tcp:8080
 2543  git push origin main
 2544  clear
 2545  cd ..
 2546  ll
 2547  rm -rf getting-started
 2548  rm -rf spring-on-quarkus-demo
 2549  clear
 2550  quarkus create app org.acme:getting-started \\n    --extension='resteasy-reactive'
 2551  ll
 2552  cd getting-started
 2553  idea .
 2554  quarkus dev
 2555  mvn test
 2556  mvn package
 2557  ll target
 2558  ll target/quarkus-app
 2559  java -jar target/quarkus-app/quarkus-run.jar
 2560  java -version
 2561  sdk use java 22.2.r17-grl
 2562  mvn package -Dnative
 2563  ll target
 2564  ./target/getting-started-1.0.0-SNAPSHOT-
 2565  ./target/getting-started-1.0.0-SNAPSHOT-runner
 2566  docker images
 2567  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 2568  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2569  docker run -i --rm -p 8080:8080 quarkus/getting-started-jvm
 2570  clear
 2571  cd ..
 2572  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started-on-quarkus-demo \\n    -Dextensions="resteasy"
 2573  ll
 2574  rm -rf getting-started-on-quarkus-demo
 2575  ll ../
 2576  git fetch origin pull/389/head:pr-389
 2577  git fetch --all
 2578  git pull -r
 2579  git push origin main
 2580  ll
 2581  rm -rf getting-started
 2582  clear
 2583  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started-on-quarkus-demo \\n    -Dextensions="resteasy"
 2584  ll 
 2585  rm -rf getting-started-on-quarkus-demo
 2586  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started \\n    -Dextensions='resteasy-reactive'\ncd getting-started
 2587  ll
 2588  idea .
 2589  mvn quarkus:dev
 2590  clear
 2591  mvn clean package
 2592  ll target
 2593  ll target/quarkus-app
 2594  java -jar target/quarkus-app/quarkus-run.jar
 2595  mvn install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 2596  sdk use java 22.2.r17-grl
 2597  java -version
 2598  mvn clean install -Dnative
 2599  ll target
 2600  ./target/getting-started-1.0.0-SNAPSHOT-runner
 2601  docker images
 2602  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2603  docker rmi 3c3808e42cca
 2604  docker rmi 36d76751c509
 2605  docker images
 2606  docker rmi a9a7feb641ba
 2607  docker rmi 9f361d3e6e5d
 2608  docker rmi 663b6ff02f23
 2609  docker rmi c97e797565fc
 2610  docker rmi 5229c3f5d0e2
 2611  docker images
 2612  docker rmi 5229c3f5d0e2
 2613  115a481a3ab5
 2614  docker rmi 115a481a3ab5
 2615  docker run -i --rm --net=host -p 8080:8080 quarkus/spring-on-quarkus-demo
 2616  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 2617  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 2618  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2619  cd ..
 2620  clear
 2621  mvn io.quarkus:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"
 2622  cd spring-on-quarkus-demo
 2623  idea .
 2624  mvn quarkus:dev
 2625  http DELETE localhost:8080/book/10
 2626  cd ..
 2627  ll
 2628  rm -rf getting-started
 2629  rm -rf spring-on-quarkus-demo
 2630  ll
 2631  clear
 2632  htoken
 2633  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started \\n    -Dextensions='resteasy-reactive'\ncd getting-started
 2634  idea .
 2635  mvn quarkus:dev
 2636  mvn package
 2637  cd ..
 2638  mvn io.quarkus:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"
 2639  cd spring-on-quarkus-demo
 2640  idea :
 2641  idea .
 2642  mvn quarkus:dev
 2643  cd ..
 2644  ll
 2645  rm -rf getting-started
 2646  rm -rf spring-on-quarkus-demo
 2647  ll
 2648  clear
 2649  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started \\n    -Dextensions='resteasy-reactive'\ncd getting-started
 2650  idea .
 2651  mvn quarkus:dev
 2652  java -version
 2653  mvn package
 2654  ll target
 2655  ll target/quarkus-app
 2656  java -jar target/quarkus-app/quarkus-run.jar
 2657  clear
 2658  sdk use java 22.2.r17-grl
 2659  java -version
 2660  mvn package -Dpackage
 2661  mvn package -Dnative
 2662  ll target
 2663  ./target/getting-started-1.0.0-SNAPSHOT-runner
 2664  clear
 2665  ./mvnw install -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 2666  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 2667  docker run -i --rm -p 8080:8080 quarkus/getting-started
 2668  clear
 2669  cd ..
 2670  mvn io.quarkus:quarkus-maven-plugin:2.13.2.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"
 2671  ll
 2672  cd spring-on-quarkus-demo
 2673  idea .
 2674  mvn quarkus:dev
 2675  http DELETE localhost:8080/book/10
 2676  clear
 2677  http DELETE localhost:8080/book/10
 2678  mvn package
 2679  mvn package -DskipTests
 2680  java -jar target/quarkus-app/quarkus-run.jar
 2681  mvn package -DskipTests
 2682  java -jar target/quarkus-app/quarkus-run.jar
 2683  mvn package -DskipTests
 2684  java -jar target/quarkus-app/quarkus-run.jar
 2685  mvn package -Dnative
 2686  mvn package -Dnative -DskipTests
 2687  java -version
 2688  sdk use java 22.2.r17-grl
 2689  mvn package -Dnative -DskipTests
 2690  ll target
 2691  ./target/spring-on-quarkus-demo-1.0.0-SNAPSHOT-runner
 2692  clear
 2693  cd ..
 2694  rm -rf spring-on-quarkus-demo
 2695  rm -rf getting-started
 2696  htoken
 2697  cd servicebox-app
 2698  mvn dependency:tree > deps.txt
 2699  mvn clean install
 2700  mvn quarkus:dev
 2701  git push auri claim-db-part
 2702  htoken
 2703  quarkus dev
 2704  git co main
 2705  git pull -r
 2706  git checkout -b add-ci-build
 2707  cd ..
 2708  mvn clean install
 2709  git push auri add-ci-build
 2710  git co main
 2711  git pull -r
 2712  git fetch --all
 2713  git fetch origin pull/11/head:pr-11
 2714  git co pr-11
 2715  cd servicebox-app
 2716  mvn compile quarkus:dev
 2717  git co main
 2718  git pull -rf
 2719  git pull -r
 2720  git rebase main
 2721  git push main -f add-ci-build
 2722  git push auri -f add-ci-build
 2723  mvn -version
 2724  git push auri add-ci-build
 2725  git reset HEAD^
 2726  git checkout -b fix-ci
 2727  git push auri fix-ci
 2728  git co main
 2729  git fetch --all
 2730  git fetch origin pull/13/head:pr-13
 2731  git co pr-13
 2732  mvn compile quarkus:dev
 2733  mvn  quarkus:dev
 2734  mvn  quarkus:dev -Dsuspend
 2735  git pull -r
 2736  git branch -d pr-13
 2737  git co main
 2738  git branch -d pr-13
 2739  git branch -D pr-13
 2740  git fetch --all
 2741  git fetch origin pull/13/head:pr-13
 2742  mvn compile quarkus:dev
 2743  git co pr-13
 2744  mvn compile quarkus:dev
 2745  mvn compile quarkus:dev -Dsuspend
 2746  mvn  quarkus:dev -Dsuspend
 2747  mvn compile quarkus:dev -Dsuspend
 2748  mvn  quarkus:dev -Dsuspend
 2749  mvn compile quarkus:dev -Dsuspend
 2750  vi .git/config
 2751  vi ../.git/config
 2752  git reset HEAD^
 2753  mvn compile quarkus:dev
 2754  git push origin issue-12
 2755  htoken
 2756  mvn quarkus:dev
 2757  cd ..
 2758  git fetch origin pull/13/head:pr-13
 2759  git fetch --all
 2760  git pull -r
 2761  git rebase development
 2762  cd stork-dns-quickstart
 2763  mvn clean install
 2764  mvn clean verify -Pnative
 2765  sdk use java 22.2.r17-grl
 2766  mvn clean verify -Pnative
 2767  git lg
 2768  mvn clean install
 2769  git lg
 2770  git rebase -i d8f29a42
 2771  git push auri stork-dns
 2772  git rebase -i d8f29a42
 2773  git push auri -f stork-dns
 2774  git pull -r
 2775  mvn quarkus:dev
 2776  http GET localhost:8080/claims
 2777  mvn test
 2778  mvn test -Dmaven.surefire.debug
 2779  mvn quarkus:dev
 2780  http GET localhost:8080/claims/mariadb-demo
 2781  mvn quarkus:dev
 2782  http GET localhost:8080/claims/mariadb-demo
 2783  mvn quarkus:dev -Dsuspend
 2784  http GET localhost:8080/claims/mariadb-demo
 2785  mvn test
 2786  mvn quarkus:dev
 2787  mvn clean compile quarkus:dev
 2788  git push origin issue-12
 2789  git pull -r
 2790  mvn test
 2791  git push origin issue-12
 2792  mvn quarkus:dev
 2793  mvn quarkus:dev -Dsuspend
 2794  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle"}' \\nhttp://localhost:8080/claims
 2795  mvn clean compile quarkus:dev
 2796  mvn clean compile quarkus:dev -Dsuspend
 2797  mvn clean package
 2798  mvn clean compile quarkus:dev -Dsuspend
 2799  mvn  quarkus:dev -Dsuspend
 2800  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle"}' \\nhttp://localhost:8080/claims
 2801  mvn clean install
 2802  mvn clean install -Dnative
 2803  sdk use java 22.2.r17-grl
 2804  mvn clean install -Dnative
 2805  mvn clean compile quarkus:dev -Dsuspend
 2806  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle"}' \\nhttp://localhost:8080/claims
 2807  mvn test
 2808  mvn test -Dmaven.surefire.debug
 2809  mvn test
 2810  mvn quarkus:dev -Dsuspend
 2811  git push origin issue-12
 2812  mvn clean verify -Pnative
 2813  git co main
 2814  git pull -r
 2815  git co issue-12
 2816  git rebase main
 2817  git push origin -f issue-12
 2818  htoken
 2819  mvn test -Dmaven.surefire.debug
 2820  mvn clean test
 2821  git push origin issue-12
 2822  htoken
 2823  git co main
 2824  git pull -r
 2825  git fetch --all
 2826  mvn clean install
 2827  git push origin issue-20
 2828  git co main
 2829  git pull -r
 2830  git checkout -b service-resource
 2831  mvn quarkus:dev
 2832  git push auri service-resource
 2833  git co main
 2834  git pull -r
 2835  git co service-resource 
 2836  git rebase main
 2837  cd servicebox-app
 2838  mvn clean install
 2839  git rebase --abort
 2840  git co main
 2841  git pull -r
 2842  mvn clean install
 2843  mvn quarkus:dev
 2844  git co service-resource
 2845  mvn clean compile quarkus:dev
 2846  cd ..
 2847  cd servicebox-app
 2848  git co main
 2849  git pull -r
 2850  git lg
 2851  git fetch --all
 2852  git pull -r
 2853  mvn clean compile quarkus:dev
 2854  mvn test
 2855  git co service-resource
 2856  git pull -r
 2857  git rebase main
 2858  mvn clean install
 2859  mvn quarkus:dev
 2860  git rebase --continue
 2861  git add
 2862  git rebase --abort
 2863  git rebase main
 2864  git rebase --abort
 2865  git rebase main
 2866  git rebase --abort
 2867  git rebase main
 2868  git rebase --abort
 2869  git rebase main
 2870  git st
 2871  git aa
 2872  git rebase --continue
 2873  git push auri -f service-resource
 2874  git lg
 2875  mvn clean install
 2876  mvn test
 2877  mvn quarkus:dev
 2878  mvn test
 2879  mvn test -Dmaven.surefire.debug
 2880  mvn quarkus:dev
 2881  mvn test
 2882  mvn quarkus:dev
 2883  curl --header "Content-Type: application/json" \                                                                                                     ✔  16:22:00\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 2884  curl --header "Content-Type: application/json" \                                                                                                     ✔  16:22:00 \n--request POST \\n--data '{"name":"Oracle"}' \\nhttp://localhost:8080/claims
 2885  curl -X POST --header "Content-Type: application/json" \                                                                                                     ✔  16:22:00 \n--request POST \\n--data '{\"name\":\"Oracle\"}' \\nhttp://localhost:8080/claims
 2886  curl -X POST --header "Content-Type: application/json" \                                                                                                     ✔  16:22:00 \n--request POST \\n--data "{\"name\":\"Oracle\"}" \\nhttp://localhost:8080/claims
 2887  curl -X POST --header "Content-Type: application/json" \                                                                                                     ✔  16:22:00 \n--request POST \\n--data "{\"name\":\"Oracle\"}"
 2888  curl -X POST http://localhost:8080/claims --header "Content-Type: application/json" \\n--request POST \\n--data "{\"name\":\"Oracle\"}"
 2889  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle"}' \\nhttp://localhost:8080/claims
 2890  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 2891  mvn test
 2892  mvn quarkus:dev
 2893  mvn quarkus:dev -Dsuspend
 2894  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 2895  mvn quarkus:dev -Dsuspend
 2896  curl --header "Content-Type: application/x-www-form-urlencoded" \\n--header "HX-Request: true"\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 2897  curl --header "Content-Type: application/x-www-form-urlencoded" \\n--header "HX-Request: true" \\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 2898  git push auri -f service-resource
 2899  git co main
 2900  git pull -r
 2901  mvn clean install
 2902  mvn test -Dtest=ClaimsEndpointTest.jva
 2903  mvn test -Dtest=ClaimsEndpointTest.java
 2904  mvn test -Dtest=ClaimsEndpointTest.java -Dmaven.surefire.debug
 2905  git co service-resource
 2906  mvn clean quarkus:dev
 2907  git co main
 2908  mvn clean install
 2909  git push origin main
 2910  git pull -r
 2911  git co service-resource
 2912  git rebase main
 2913  git rebase --continue
 2914  mvn clean install
 2915  mvn clean quarkus:dev
 2916  git push auri -f service-resource
 2917  mvn test
 2918  mvn test -Dtest=ClaimsEndpointTest.java -Dmaven.surefire.debug
 2919  mvn test
 2920  mvn test -Dtest=ClaimsEndpointTest.java
 2921  mvn test
 2922  mvn test -Dtest=ServicesEndpointTest.java
 2923  mvn test
 2924  git push auri service-resource 
 2925  mvn test -Dtest=ClaimsEndpointTest.java -Dmaven.surefire.debug
 2926  mvn test -Dtest=ClaimsEndpointTest.java
 2927  mvn test -Dtest=ClaimsEndpointTest.java -Dmaven.surefire.debug
 2928  mvn test -Dtest=ClaimsEndpointTest.java
 2929  mvn clean package -DskipTests
 2930  mvn test -Dtest=ClaimsEndpointTest.java -Dmaven.surefire.debug
 2931  mvn test -Dtest=ClaimsEndpointTest.java
 2932  git co main
 2933  git pull -r
 2934  mvn clean install
 2935  mvn quarkus:dev
 2936  git checkout -b refactor-issue-26
 2937  mvn quarkus:dev
 2938  mvn quarkus:dev -Dsuspend
 2939  htoken
 2940  mvn quarkus:dev -Dsuspend
 2941  mvn test
 2942  mvn clean install
 2943  mvn quarkus:dev
 2944  git co main
 2945  git pull -r
 2946  git co refactor-issue-26
 2947  git push auri refactor-issue-26
 2948  git co main
 2949  git pull -r
 2950  htoken
 2951  mvn quarkus:dev
 2952  git reset HEAD^
 2953  git checkout -b fix-issue-32
 2954  git push auri fix-issue-32
 2955  git co refactor-issue-26
 2956  mvn test
 2957  mvn clean quarkus:dev
 2958  mvn clean quarkus:dev -Dsuspend
 2959  curl http://localhost:8080/claims
 2960  mvn clean quarkus:dev -Dsuspend
 2961  curl http://localhost:8080/claims/new
 2962  curl http://localhost:8080/claims
 2963  curl http://localhost:8080/claims/new
 2964  mvn test
 2965  mvn test -Dtest=ClaimsEndpointTest.java -Dmaven.surefire.debug
 2966  mvn test
 2967  git co main
 2968  git pull -r
 2969  mvn clean test
 2970  git co refactor-issue-26
 2971  git rebase main
 2972  mvn clean test
 2973  mvn quarkus:dev
 2974  git push auri -f refactor-issue-26
 2975  htoken
 2976  cd ..
 2977  git pull -r
 2978  git co main
 2979  git pull -r
 2980  git fetch --all
 2981  git pull -r
 2982  mvn clean install -DskipTests
 2983  git pull -r
 2984  mvn clean install -Dquickly
 2985  history mac
 2986  history > mac.txt
 2987  mvn clean install -pl extensions/resteasy-reactive/rest-client-reactive/deployment,integration-tests/rest-client-reactive-stork,integration-tests/rest-client-reactive
 2988  mvn clean install -pl grpc-health,grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls
 2989  mvn clean install -pl grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls
 2990  cd integration-tests
 2991  mvn clean install -pl grpc-health,grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls
 2992  mvn clean install -pl grpc-health,grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls -Dnative
 2993  sdk use java 22.2.r17-grl
 2994  mvn clean install -pl grpc-health,grpc-interceptors,grpc-mutual-auth,grpc-plain-text-gzip,grpc-proto-v2,grpc-streaming,grpc-tls -Dnative
 2995  git co main
 2996  git pull -r
 2997  git fetch --all
 2998  git fetch origin pull/58/head:pr-58
 2999  gti co pr-58
 3000  git co pr-58
 3001  htoken
 3002  git pull -r
 3003  git co main
 3004  git pull -r
 3005  git checkout -b Sgitario-44 main
 3006  git pull git@github.com:Sgitario/primaza-poc.git 44
 3007  cd ..
 3008  git co main
 3009  vi .git/config
 3010  git fetch --all
 3011  vi .git/config
 3012  git fetch --all
 3013  cd servicebox-app
 3014  mvn clean install
 3015  git co main
 3016  git pull -r
 3017  git co 44
 3018  git rebase main
 3019  mvn clean install
 3020  git rebase --abort
 3021  git co main
 3022  mvn clean install
 3023  mvn quarkus:dev
 3024  git pull -r
 3025  mvn quarkus:dev
 3026  cd ..
 3027  mvn clean install
 3028  cd servicebox-app
 3029  mvn quarkus:dev
 3030  cd ..
 3031  git pull -r
 3032  git checkout -b service-discovery-17
 3033  kind get clusters
 3034  cd kind
 3035  ./kind-reg-ingress.sh
 3036  kind get clusters
 3037  k cluster-info
 3038  docker rmi 36d76751c509
 3039  clear
 3040  kubectl apply -f https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/_attachments/postgresql-deployment.yaml -n my-petclinic
 3041  kubectl config current-context
 3042  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 3043  kubectl create namespace test
 3044  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 3045  kubectl config set-context --current --namespace test
 3046  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 3047  kubectl apply -f https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/_attachments/postgresql-deployment.yaml -n test
 3048  k get services
 3049  k get endpoints
 3050  mvn clean install
 3051  mvn test -Dtest=ServiceDiscoveryJobTest
 3052  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debut
 3053  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3054  mvn clean test
 3055  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3056  mvn clean test
 3057  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3058  git co main
 3059  git pull -r
 3060  mvn clean install
 3061  mvn quarkus:dev
 3062  clear
 3063  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle"}' \\nhttp://localhost:8080/claims
 3064  curl --header "Content-Type: application/json" \                                                                                                     ✔  16:22:00\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 3065  curl --header "Content-Type: application/json" \                                                                                            \n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 3066  curl --header "application/x-www-form-urlencoded" \                                                                                  \n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 3067  curl --header "Content-Type: application/json" \\n--request POST \\n--data '{"name":"Oracle", "version": "3.11.2", "endpoint": "tcp:5672", "deployed": "false"}' \\nhttp://localhost:8080/services
 3068  curl http://localhost:8080/claims
 3069  git reset HEAD^
 3070  git checkout -b improve-readme-18
 3071  git push auri improve-readme-18
 3072  cd demos
 3073  ll
 3074  cd auri
 3075  cd Code
 3076  ll
 3077  cd demos
 3078  ll
 3079  mvn io.quarkus:quarkus-maven-plugin:2.13.3.Final:create \\n        -DprojectGroupId=org.acme.spring.web \\n        -DprojectArtifactId=spring-on-quarkus-demo \\n        -DclassName="org.acme.spring.web.GreetingController" \\n        -Dpath="/greeting" \\n        -Dextensions="spring-web"
 3080  cd spring-on-quarkus-demo
 3081  ll
 3082  idea .
 3083  mvn compile quarkus:dev
 3084  docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:14.5\n
 3085  mvn clean install
 3086  git push origin main
 3087  git pull -r
 3088  git rebase --continue
 3089  mvn clean install
 3090  git push origin -f main
 3091  htoken
 3092  git push auri improve-readme-18
 3093  ll
 3094  cd Code
 3095  ll
 3096  cd demos
 3097  ll
 3098  clear
 3099  ll
 3100  rm -rf spring-on-quarkus-demo
 3101  htoken
 3102  clear
 3103  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started-on-quarkus-demo \\n    -Dextensions="resteasy"\n
 3104  ll
 3105  cd getting-started-on-quarkus-demo
 3106  idea .
 3107  ./mvnw clean install
 3108  git co main
 3109  git pull -r
 3110  git co improve-readme-18 
 3111  git push auri improve-readme-18
 3112  mvn
 3113  clear
 3114  mvn quarkus:dev
 3115  mvn clean package
 3116  ll target
 3117  ll target/quarkus-app
 3118  java -jar target/quarkus-app/quarkus-run.jar
 3119  mvn package -Dnative
 3120  sdk use java 22.2.r17-grl
 3121  java -version
 3122  mvn package -Dnative
 3123  ll target/
 3124  ./target/getting-started-on-quarkus-demo-1.0.0-SNAPSHOT-runner
 3125  netstat -anv | grep 8080
 3126  lsof -i tcp:8080
 3127  kill -9 81466
 3128  ./target/getting-started-on-quarkus-demo-1.0.0-SNAPSHOT-runner
 3129  mvn package -Dnative -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 3130  mvn package -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 3131  docker images
 3132  docker rmi 1bfad4231e7d
 3133  docker rmi 572084a0b25d
 3134  docker rmi 8a123bd131c9
 3135  docker images
 3136  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started-on-quarkus-demo .
 3137  docker run -i --rm -p 8080:8080 quarkus/getting-started-on-quarkus-demo
 3138  lsof -i tcp:8080
 3139  kill -9 81858
 3140  docker run -i --rm -p 8080:8080 quarkus/getting-started-on-quarkus-demo
 3141  docker images
 3142  docker rmi b352a7bc7f46
 3143  docker ps
 3144  docker rmi b352a7bc7f46
 3145  docker rm 34f240b9ea5d
 3146  docker rmi b352a7bc7f46
 3147  clear
 3148  cd ..
 3149  ll
 3150  mvn io.quarkus:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"\n
 3151  ll
 3152  cd spring-on-quarkus-demo
 3153  idea .
 3154  mvn quarkus:dev
 3155  clear
 3156  cd ..
 3157  rm -rf spring-on-quarkus-demo
 3158  mvn io.quarkus:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"\n
 3159  cd spring-on-quarkus-demo
 3160  idea .
 3161  mvn quarkus:dev
 3162  ./mvnw quarkus:add-extension -Dextensions="quarkus-spring-data-jpa,quarkus-jdbc-postgresql"
 3163  clear
 3164  http DELETE localhost:8080/book/10
 3165  mvn clean package
 3166  mvn clean package -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 3167  java -version
 3168  docker build -f src/main/docker/Dockerfile.native -t quarkus/spring-on-quarkus-demo .
 3169  docker run -i --rm --net=host -p 8080:8080 quarkus/spring-on-quarkus-demo
 3170  mvn clean package -Dnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 3171  docker build -f src/main/docker/Dockerfile.native -t quarkus/spring-on-quarkus-demo .
 3172  docker run -i --rm --net=host -p 8080:8080 quarkus/spring-on-quarkus-demo
 3173  cd ..
 3174  rm -rf spring-on-quarkus-demo
 3175  rm -rf getting-started-on-quarkus-demo
 3176  ll
 3177  clear
 3178  mvn io.quarkus.platform:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme \\n    -DprojectArtifactId=getting-started \\n    -Dextensions='resteasy-reactive'\ncd getting-started
 3179  ll
 3180  idea .
 3181  mvn quarkus:dev
 3182  mvn clean package
 3183  java -version
 3184  ll target
 3185  ll target/quarkus-app
 3186  java -jar target/quarkus-app/quarkus-run.jar
 3187  sdk use java 22.2.r17-grl
 3188  java -version
 3189  mvn clean package -Dnative
 3190  ll target
 3191  ./target/getting-started-1.0.0-SNAPSHOT-runner
 3192  clear
 3193  cd ..
 3194  mvn io.quarkus:quarkus-maven-plugin:2.13.3.Final:create \\n    -DprojectGroupId=org.acme.spring.web \\n    -DprojectArtifactId=spring-on-quarkus-demo \\n    -DclassName="org.acme.spring.web.GreetingController" \\n    -Dpath="/greeting" \\n    -Dextensions="spring-web"\n
 3195  ll
 3196  cd spring-on-quarkus-demo
 3197  idea .
 3198  mvn quarkus:dev
 3199  mvn quarkus:add-extension -Dextensions="quarkus-spring-data-jpa,quarkus-jdbc-postgresql"
 3200  http DELETE localhost:8080/book/10
 3201  http DELETE localhost:8080/books/10
 3202  clear
 3203  http DELETE localhost:8080/books/10
 3204  ll target
 3205  docker images
 3206  ./mvnw package -Pnative -Dquarkus.native.container-build=true -Dquarkus.native.builder-image=quay.io/cescoffi/ubi-quarkus-native-image:22.1-java17 -DskipTests
 3207  docker build -f src/main/docker/Dockerfile.native -t quarkus/getting-started .
 3208  docker run -i --rm -p 8080:8080 quarkus/getting-started
 3209  mvn clean package
 3210  java -jar target/quarkus-app/quarkus-run.jar
 3211  mvn clean package
 3212  java -jar target/quarkus-app/quarkus-run.jar
 3213  git co main
 3214  git pull -r
 3215  git co improve-readme-18
 3216  git push auri improve-readme-18
 3217  htoken
 3218  git co main
 3219  git pull -r
 3220  git fetch --all
 3221  mvn clean install -DskipTests
 3222  mvn test -Dtest=ClaimsEndpointTest -Dmaven.surefire.debug
 3223  mvn test -Dtest=ClaimsEndpointTest
 3224  mvn test -Dtest=ClaimsEndpointTest -Dmaven.surefire.debug
 3225  mvn dependency:tree > deps.txt
 3226  mvn clean install -DskipTests
 3227  htoken
 3228  mvn clean install -DskipTests
 3229  htoken
 3230  git st
 3231  git co main
 3232  git fetch --all
 3233  git pull -r
 3234  mvn clean install
 3235  git rebase main
 3236  k get services
 3237  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 3238  kubectl get svc
 3239  kubectl cluster-info --context kind-kind
 3240  kubectl get pods -n test
 3241  kubectl config view
 3242  kind get clusters
 3243  kubectl get svc
 3244  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3245  mvn clean install -DskipTests
 3246  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3247  mvn clean install -DskipTests
 3248  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3249  mvn clean install -DskipTests
 3250  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3251  k get services
 3252  k get service spring-petclinic-postgresql -o yaml
 3253  git pull -r
 3254  git checkout -b improve-k8s-metadata
 3255  k get endpoint spring-petclinic-postgresql -o yaml
 3256  k get endpoints
 3257  k get endpoints spring-petclinic-postgresql -o yaml
 3258  mvn clean install -DskipTests
 3259  git pull -r
 3260  mvn clean install -Dquickly
 3261  mvn clean install -DskipTests
 3262  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3263  subsets:\n- addresses:\n  - ip: 10.244.0.5\n    nodeName: kind-control-plane\n    targetRef:\n      kind: Pod\n      name: spring-petclinic-postgresql-8579fdcc59-zsb6f\n      namespace: test\n      uid: 5d0cfbd3-45f3-4e30-a91a-9c08271f1748\n  ports:\n  - port: 5432\n    protocol: TCP
 3264  mvn test -Dtest=ServiceDiscoveryJobTest
 3265  mvn test -Dtest=ServiceDiscoveryJobTest -Dmaven.surefire.debug
 3266  mvn test -Dtest=ServiceDiscoveryJobTest
 3267  git push auri improve-k8s-metadata
 3268  git co main
 3269  git pull -r
 3270  git co service-discovery-17 
 3271  git rebase main
 3272  git push auri service-discovery-17
 3273  cd ..
 3274  ll
 3275  git clone git@github.com:aureamunoz/fantastic-dekorate.git
 3276  cd fantastic-dekorate
 3277  ll
 3278  idea .
 3279  cd spring-petclinic
 3280  mvn clean install
 3281  mvn clean install -DskipTests
 3282  k get pods
 3283  kubectl delete -f https://redhat-developer.github.io/service-binding-operator/userguide/getting-started/_attachments/postgresql-deployment.yaml -n my-petclinic
 3284  k get pods
 3285  k delete namespace test
 3286  k get pods
 3287  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true\n
 3288  git pull -r
 3289  git fetch --all
 3290  git pull -r
 3291  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true\n
 3292  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3293  k create namespace test
 3294  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3295  k get pods
 3296  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3297  mvn clean install -DskipTests
 3298  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3299  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3300  mvn clean install -DskipTests
 3301  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3302  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3303  mvn clean install -DskipTests
 3304  git pull -r
 3305  mvn clean install -DskipTests
 3306  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3307  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3308  k get pods
 3309  cd ..
 3310  git clone git@github.com:aureamunoz/dekorate-for-devoxx-fr-2022.git
 3311  cd dekorate-for-devoxx-fr-2022
 3312  idea .
 3313  mvn clean install -DskipTests
 3314  k get pods
 3315  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3316  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true\n
 3317  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3318  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3319  k get pods
 3320  k describe pod spring-petclinic-7779f4c7ff-gpjlv
 3321  k logs spring-petclinic-7779f4c7ff-gpjlv
 3322  k describe pod spring-petclinic-7779f4c7ff-gpjlv
 3323  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3324  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true\n
 3325  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3326  k get pods
 3327  k describe pod spring-petclinic-58ccb48dbd-pkhx6
 3328  k logs spring-petclinic-58ccb48dbd-pkhx6
 3329  mvn spring-boot:run
 3330  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3331  mvn clean install -DskipTests\n
 3332  mvn clean install -DskipTests
 3333  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3334  mvn clean install -DskipTests
 3335  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3336  mvn clean install -DskipTests
 3337  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3338  k get pods
 3339  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3340  docker login quay.io
 3341  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3342  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3343  k get pods
 3344  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3345  k get pods
 3346  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3347  k get pods
 3348  ./kind-reg-ingress.sh
 3349  chmod 666 kind-reg-ingress.sh
 3350  ./kind-reg-ingress.sh
 3351  ll
 3352  chmod +x kind-reg-ingress.sh
 3353  ll
 3354  ./kind-reg-ingress.sh
 3355  k create namespace test
 3356  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3357  docker ps
 3358  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3359  k get pods
 3360  k get pods -n test
 3361  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3362  k get pods -n test
 3363  k get pods
 3364  docker exec -it kind-control-plane bash\n
 3365  docker images
 3366  mvn clean install -DskipTests -Ddekorate.build=true 
 3367  docker images
 3368  docker push 127.0.0.1:5000/amunozhe/sb-dekorate
 3369  docker push 127.0.0.1:5000/amunozhe/sb-dekorate:2.0.0
 3370  docker exec -it kind-control-plane bash\n
 3371  mvn clean install -DskipTests -Ddekorate.build=true 
 3372  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3373  docker exec -it kind-control-plane bash\n
 3374  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3375  docker images
 3376  mvn spring-boot:run
 3377  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3378  k get pods
 3379  k describe spring-petclinic-58ccb48dbd-42qwf
 3380  k describe pod spring-petclinic-58ccb48dbd-42qwf
 3381  k log spring-petclinic-58ccb48dbd-42qwf
 3382  k logs spring-petclinic-58ccb48dbd-42qwf
 3383  docker ps
 3384  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3385  docker exec -it kind-control-plane bash\n
 3386  k get pods
 3387  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3388  k get pods
 3389  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3390  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3391  k get pods
 3392  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3393  k get pods
 3394  k describe pod spring-petclinic-f466c8768-59cqb
 3395  docker exec -it kind-control-plane bash\n
 3396  docker push 127.0.0.1:5000/amunozhe/spring-petclinic:2.0.0
 3397  docker exec -it kind-control-plane bash\n
 3398  docker push localhost:5000/amunozhe/spring-petclinic:2.0.0
 3399  docker images
 3400  docker tag f47f5b607333 localhost:5000/amunozhe/spring-petclinic
 3401  docker images
 3402  docker tag f47f5b607333 localhost:5000/amunozhe/spring-petclinic:2.0.0
 3403  docker images
 3404  docker push localhost:5000/amunozhe/spring-petclinic:2.0.0
 3405  docker push 127.0.0.1:5000/amunozhe/spring-petclinic:2.0.0
 3406  docker pull 127.0.0.1:5000/amunozhe/spring-petclinic:2.0.0
 3407  k get pods
 3408  k9s
 3409  brew install derailed/k9s/k9s
 3410  k9s
 3411  mvn clean install
 3412  mvn clean install -DskipTests
 3413  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3414  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3415  git push auri main
 3416  cd ..
 3417  vi .git/config
 3418  git push origin main
 3419  git checkout -b demo-kcd
 3420  git push origin demo-kcd
 3421  ./kind-reg-ingress.sh
 3422  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3423  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3424  k9s
 3425  ipconfig
 3426  kubectl create deployment demo --image=httpd --port=80; kubectl expose deployment demo\n
 3427  kubectl create ingress demo --class=nginx --rule="demo.127.0.0.1.nip.io/*=demo:80"\n\n
 3428  k get pods
 3429  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3430  k get pods
 3431  mvn clean install -DskipTests
 3432  docker exec -it kind-control-plane bash\n
 3433  docker push kind-registry:5000/auri/sb-dekorate:2.0.0
 3434  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3435  k get pods
 3436  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3437  k get pods
 3438  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3439  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3440  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3441  ifconfig
 3442  k get pods
 3443  k logs hello-world-57fd5f6fff-99b4q
 3444  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3445  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3446  dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com
 3447  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3448  ./kind-reg-ingress.sh
 3449  k get pods
 3450  k9s
 3451  docker images
 3452  docker rmi $(docker images |grep 'sb-dekorate')
 3453  docker images
 3454  docker rmi $(docker images |grep 'hello-world')
 3455  docker rmi $(docker images |grep 'spring-petclinic')
 3456  docker images
 3457  docker image prune
 3458  docker images
 3459  docker rmi $(docker images |grep 'amunozhe')
 3460  docker images
 3461  docker rmi f47f5b607333
 3462  docker images
 3463  docker exec -it kind-control-plane bash\n
 3464  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3465  docker images
 3466  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3467  k get pods
 3468  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3469  docker images
 3470  docker rmi -f f47f5b607333
 3471  docker images
 3472  docker rmi f47f5b607333
 3473  docker rmi ea5527215d53
 3474  docker images
 3475  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3476  docker images
 3477  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3478  k get pods
 3479  k9s
 3480  docker images
 3481  docker rmi 5e8cfb20fbf4
 3482  docker images
 3483  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3484  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3485  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3486  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3487  k get logs
 3488  k get pods
 3489  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3490  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3491  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3492  k get pods
 3493  bash <(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 3494  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3495  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3496  k get pods
 3497  cd spring-petclinic
 3498  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3499  cat /etc/hosts
 3500  vi /etc/hosts
 3501  sudo vi /etc/hosts
 3502  cat /etc/hosts
 3503  q!
 3504  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3505  k9s
 3506  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3507  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true -Ddekorate.deploy=true
 3508  k get pods
 3509  ping 127.0.0.1
 3510  ping localhost
 3511  ping kind-registry
 3512  docker ps
 3513  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true -Ddekorate.deploy=true
 3514  k get pods
 3515  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true -Ddekorate.deploy=true
 3516  k get pods
 3517  ping kind-registry
 3518  mvn clean package -DskipTests
 3519  k apply -f target/classes/META-INF/dekorate/knative.yml
 3520  mvn clean package -DskipTests
 3521  k get pods
 3522  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3523  k get pods
 3524  mvn clean package -DskipTests
 3525  helm install spring-petclinic  target/classes/META-INF/dekorate/helm/hspring-petclinic
 3526  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3527  helm install spring-petclinic  target/classes/META-INF/dekorate/helm/hspring-petclinic
 3528  k get pods
 3529  helm delete spring-petclinic
 3530  k get pods
 3531  helm install spring-petclinic target/classes/META-INF/dekorate/helm/hspring-petclinic
 3532  k get pods
 3533  k9s
 3534  k delete --all
 3535  k get ingress
 3536  k delete ingress hspring-petclinic
 3537  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3538  helm delete spring-petclinic
 3539  helm delete hspring-petclinic
 3540  k get pods
 3541  helm install hspring-petclinic target/classes/META-INF/dekorate/helm/hspring-petclinic
 3542  k get pods
 3543  k get spring-petclinic.iml
 3544  k get ingress
 3545  helm uninstall hspring-petclinic
 3546  k get ingress
 3547  k get pods
 3548  helm install spring-petclinic target/classes/META-INF/dekorate/helm/hspring-petclinic
 3549  k get pods
 3550  k get ingress
 3551  helm uninstall hspring-petclinic
 3552  k get ingress
 3553  k delete ingress hspring-petclinic
 3554  helm uninstall hspring-petclinic
 3555  mvn clean package -DskipTests
 3556  helm uninstall hspring-petclinic
 3557  helm uninstall spring-petclinic
 3558  mvn clean package -DskipTests
 3559  helm install spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3560  k get ingress
 3561  k get pods
 3562  git push origin main
 3563  cat > clusterconfig.yaml <<EOF\nkind: Cluster\napiVersion: kind.sigs.k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  extraPortMappings:\n    ## expose port 31380 of the node to port 80 on the host\n  - containerPort: 31080\n    hostPort: 80\n    ## expose port 31443 of the node to port 443 on the host\n  - containerPort: 31443\n    hostPort: 443\nEOF
 3564  $ kind create cluster --name knative --config clusterconfig.yaml\n
 3565  kind create cluster --name knative --config clusterconfig.yaml\n
 3566  rm -rf clusterconfig.yaml
 3567  kind create cluster --name knative\n
 3568  $ kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml
 3569  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml
 3570  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-core.yaml\n
 3571  curl -Lo kourier.yaml https://github.com/knative/net-kourier/releases/download/knative-v1.0.0/kourier.yaml
 3572  vi kourier.yaml
 3573  kubectl apply --filename kourier.yaml
 3574  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'\n
 3575  kubectl describe configmap/config-network --namespace knative-serving
 3576  q!
 3577  $ kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'
 3578  kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'
 3579  kubectl get pods --namespace knative-serving
 3580  cat > service.yaml <<EOF\napiVersion: serving.knative.dev/v1 # Current version of Knative\nkind: Service\nmetadata:\n  name: helloworld-go # The name of the app\n  namespace: default # The namespace the app will use\nspec:\n  template:\n    spec:\n      containers:\n        - image: gcr.io/knative-samples/helloworld-go # The URL to the image of the app\n          env:\n            - name: TARGET # The environment variable printed out by the sample app\n              value: "Hello Knative Serving is up and running with Kourier!!"\nEOF
 3581  kubectl apply --filename service.yaml
 3582  kubectl get ksvc
 3583  curl -v http://helloworld-go.default.127.0.0.1.sslip.io\n
 3584  curl -v http://helloworld-go.default.127.0.0.1.sslip.io
 3585  kind clusters
 3586  kubectl get ksvc
 3587  curl -v http://helloworld-go.default.127.0.0.1.sslip.io
 3588  kind get clusters
 3589  kind 
 3590  kubectl cluster-info --context knative
 3591  kind get clusters
 3592  kubectl cluster-info
 3593  kubectl config view
 3594  k9s
 3595  kubectl get ksvc
 3596  kind delete cluster --name knative
 3597  cat > clusterconfig.yaml <<EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  extraPortMappings:\n  ## expose port 31380 of the node to port 80 on the host\n    - containerPort: 31080\n      hostPort: 80\n      ## expose port 31443 of the node to port 443 on the host\n    - containerPort: 31443\n      hostPort: 443\n      EOF\n\n\n\n\n\n
 3598  clear
 3599  cat > clusterconfig.yaml <<EOF                                                                                                                                                                                          ✔  13:02:42\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  extraPortMappings:\n    ## expose port 31380 of the node to port 80 on the host\n  - containerPort: 31080\n    hostPort: 80\n    ## expose port 31443 of the node to port 443 on the host\n  - containerPort: 31443\n    hostPort: 443\nEOF
 3600  kind create cluster --name knative --config clusterconfig.yaml
 3601  rm -rf clusterconfig.yaml
 3602  cat > clusterconfig.yaml <<EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  extraPortMappings:\n    ## expose port 31380 of the node to port 80 on the host\n  - containerPort: 31080\n    hostPort: 80\n    ## expose port 31443 of the node to port 443 on the host\n  - containerPort: 31443\n    hostPort: 443\nEOF
 3603  kind create cluster --name knative --config clusterconfig.yaml
 3604  kind delete cluster --name kind
 3605  kind create cluster --name knative --config clusterconfig.yaml
 3606  $ kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 3607  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 3608  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-core.yaml\n
 3609  kubectl apply --filename kourier.yaml\n
 3610  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'\n
 3611  kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'\n
 3612  kubectl get pods --namespace knative-serving\n
 3613  kubectl get pods --namespace kourier-system
 3614  kubectl apply --filename service.yaml
 3615  kubectl get ksvc
 3616  curl -v http://helloworld-go.default.127.0.0.1.sslip.io
 3617  mvn clean package -DskipTests
 3618  k apply -f target/classes/META-INF/dekorate/knative.yml
 3619  k get ksvc
 3620  k delete ksvc helloworld-go
 3621  k get ksvc
 3622  k delete -f target/classes/META-INF/dekorate/knative.yml
 3623  k get ksvc
 3624  mvn clean package -DskipTests
 3625  k apply -f target/classes/META-INF/dekorate/knative.yml
 3626  k get ksvc
 3627  kubectl get ksvc
 3628  kind delete cluster --name knative
 3629  git push origin main
 3630  kind delete cluster --name knative
 3631  bash <(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 3632  clear
 3633  mvn clean package
 3634  mvn clean package -DskipTests
 3635  kubectl cluster-info
 3636  docker ps
 3637  mvn clean package -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3638  kubectl apply -f target/kubernetes/kubernetes.yml
 3639  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3640  k get pods
 3641  k9s
 3642  clear
 3643  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3644  mvn clean package -DskipTests
 3645  helm install target/classes/META-INF/dekorate/helm/spring-petclinic
 3646  helm install spring-petclinictarget/classes/META-INF/dekorate/helm/spring-petclinic
 3647  helm install spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3648  mvn clean package -DskipTests
 3649  clear
 3650  mvn clean package -DskipTests
 3651  docker ps
 3652  mvn clean package -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3653  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3654  k get pods
 3655  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3656  k get pods
 3657  k apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3658  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3659  mvn clean package -DskipTests
 3660  helm install spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3661  k get pods
 3662  helm install spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3663  helm uninstall spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3664  mvn clean package -DskipTests
 3665  helm uninstall spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3666  helm install spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3667  helm uninstall spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3668  k get pods
 3669  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3670  k get pods
 3671  helm uninstall spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3672  k get pods
 3673  clera
 3674  clear
 3675  mvn clean package -DskipTests
 3676  clear
 3677  docker ps
 3678  clear
 3679  mvn clean package -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 3680  clear
 3681  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 3682  clear
 3683  k9s
 3684  k get pods
 3685  clear
 3686  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 3687  mvn clean package -DskipTests
 3688  clear
 3689  helm install spring-petclinic target/classes/META-INF/dekorate/helm/spring-petclinic
 3690  k get pods
 3691  htoken
 3692  git pull -r
 3693  git co main
 3694  git fetch --all
 3695  git pull -r
 3696  git checkout -b refactor-entities-94
 3697  mvn clean install
 3698  mvn test -Dtest=ClaimingServiceJobTest
 3699  mvn clean install
 3700  mvn test -Dtest=ClaimingServiceJobTest
 3701  mvn clean install -DskipTests 
 3702  mvn test -Dtest=ClaimingServiceJobTest
 3703  mvn clean install -DskipTests 
 3704  mvn test -Dtest=ClaimingServiceJobTest
 3705  mvn clean install
 3706  mvn test -Dtest=ServicesEndpointTest
 3707  mvn clean install
 3708  mvn test -Dtest=ServicesEndpointTest
 3709  mvn clean install -DskipTests 
 3710  mvn test -Dtest=ServicesEndpointTest
 3711  mvn clean install -DskipTests 
 3712  mvn test -Dtest=ServicesEndpointTest
 3713  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3714  mvn clean install -DskipTests 
 3715  mvn test -Dtest=ServicesEndpointTest
 3716  mvn clean install -DskipTests 
 3717  mvn test -Dtest=ServicesEndpointTest
 3718  mvn clean install -DskipTests 
 3719  mvn test -Dtest=ServicesEndpointTest
 3720  mvn clean install -DskipTests 
 3721  mvn test -Dtest=ServicesEndpointTest
 3722  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3723  mvn clean test -Dtest=ServicesEndpointTest
 3724  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3725  mvn clean test -Dtest=ServicesEndpointTest
 3726  mvn clean test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3727  mvn clean install -DskipTests 
 3728  mvn clean test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3729  mvn clean install -DskipTests
 3730  mvn clean test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3731  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3732  mvn clean install -DskipTests
 3733  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3734  mvn clean install -DskipTests
 3735  mvn test -Dtest=ClaimsEndpointTest
 3736  lsof -i tcp:8080
 3737  lsof -i tcp:8081
 3738  lsof -i tcp:8080
 3739  lsof -i tcp:8081
 3740  kill -9 66793
 3741  lsof -i tcp:8081
 3742  mvn test -Dtest=ClaimsEndpointTest
 3743  mvn clean test -Dtest=ClaimsEndpointTest
 3744  mvn test -Dtest=ClaimsEndpointTest -Dmaven.surefire.debug
 3745  mvn test -Dtest=ClaimsEndpointTest
 3746  mvn clean install -DskipTests
 3747  mvn quarkus:dev
 3748  http GET localhost:8080/claims/name/auri
 3749  http GET localhost:8080/claims/filter?name=auri&servicerequested=
 3750  http GET localhost:8080/claims/filter?name=auri
 3751  mvn quarkus:dev
 3752  curl --header "HX-Request: true" \\n--request GET \\nhttp://localhost:8080/claims/filter\?name\=auri\&servicerequested\=
 3753  curl --header "HX-Request: true" \\n--request GET \\nhttp://localhost:8080/claims/filter\?servicerequested\=
 3754  curl --header "HX-Request: true" \\n--request GET \\nhttp://localhost:8080/claims/filter\?servicerequested\=mysql
 3755  mvn test -Dtest=ClaimsEndpointTest
 3756  mvn test -Dtest=ClaimsEndpointTest -Dmaven.surefire.debug
 3757  mvn clean install -DskipTests
 3758  git fetch --all
 3759  git pull -r
 3760  git checkout -b fix-doc
 3761  git push auri fix-doc
 3762  mvn clean install -DskipTests
 3763  mvn test -Dtest=ClaimsEndpointTest
 3764  mvn test -Dtest=ClaimsEndpointTest -Dmaven.surefire.debug
 3765  mvn test -Dtest=ClaimsEndpointTest
 3766  mvn test -Dtest=ServicesEndpointTest
 3767  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3768  mvn test -Dtest=ServicesEndpointTest
 3769  mvn test -Dtest=ClaimsEndpointTest
 3770  mvn test -Dtest=ClustersEndpointTest
 3771  mvn test
 3772  mvn test -Dtest=CLaimingServiceJobTest
 3773  mvn test -Dtest=ClaimingServiceJobTest
 3774  mvn quarkus:dev
 3775  htoken
 3776  mvn test
 3777  lsof -i tcp:8081
 3778  lsof -i tcp:8080
 3779  mvn clean install
 3780  mvn test -Dtest=ClaimsJPATest
 3781  mvn clean install
 3782  mvn test -Dtest=ClaimingServiceJobTest
 3783  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3784  git co main
 3785  git pull -r
 3786  git co refactor-entities-94
 3787  git rebase main
 3788  mvn clean install
 3789  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3790  mvn clean install
 3791  mvn test -Dtest=ClaimingServiceJobTest
 3792  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3793  mvn clean install -DskipTests
 3794  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3795  mvn clean install -DskipTests
 3796  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3797  mvn clean install -DskipTests
 3798  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3799  mvn test -Dtest=ClaimingServiceJobTest
 3800  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3801  mvn clean install -DskipTests
 3802  mvn test -Dtest=ClaimingServiceJobTest
 3803  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3804  mvn test -Dtest=ClaimingServiceJobTest
 3805  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3806  mvn test -Dtest=ClaimingServiceJobTest
 3807  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3808  mvn test -Dtest=ClaimingServiceJobTest
 3809  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3810  mvn test -Dtest=ClaimingServiceJobTest
 3811  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3812  mvn test -Dtest=ClaimingServiceJobTest
 3813  mvn test -Dtest=ClaimingServiceJobTest -Dmaven.surefire.debug
 3814  mvn test -Dtest=ClaimingServiceJobTest
 3815  mvn clean install 
 3816  mvn test -Dtest=ClaimsEndpointTest
 3817  mvn clean install 
 3818  mvn quarkus:dev
 3819  mvn clean install 
 3820  git co main
 3821  git pull -r
 3822  git co refactor-entities-94
 3823  git rebase main
 3824  git push auri refactor-entities-94
 3825  git co main
 3826  git pull -r
 3827  htoken
 3828  git co refactor-entities-94
 3829  mvn clean install 
 3830  mvn test -Dtest=ServicesEndpointTest
 3831  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3832  htoken
 3833  git push auri refactor-entities-94
 3834  git co main
 3835  git pull -r
 3836  git co refactor-entities-94
 3837  git rebase main
 3838  git rebase --continue
 3839  mvn clean install -DskipTests
 3840  mvn clean install
 3841  mvn test -Dtest=ServicesEndpointTest
 3842  mvn clean install
 3843  git push auri -f refactor-entities-94
 3844  git co main
 3845  git pull -r
 3846  mvn clean install -DskipTests
 3847  git co refactor-entities-94
 3848  mvn clean install -DskipTests
 3849  mvn test -Dtest=ServicesEndpointTest
 3850  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3851  mvn test -Dtest=ServicesEndpointTest 
 3852  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3853  mvn clean install -DskipTests
 3854  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3855  mvn clean install -DskipTests
 3856  mvn test -Dtest=ServicesEndpointTest
 3857  mvn clean install -DskipTests
 3858  mvn test -Dtest=ServicesEndpointTest
 3859  mvn clean install -DskipTests
 3860  mvn test -Dtest=ServicesEndpointTest
 3861  mvn clean install -DskipTests
 3862  mvn clean install
 3863  git push auri  refactor-entities-94
 3864  mvn quarkus:dev
 3865  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded"\n--request POST \\nhttp://localhost:8080/services\?name\=Aurea\&version\=DAS\&endpoint\=tcp%3A7854
 3866  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\nhttp://localhost:8080/services\?name\=Aurea\&version\=DAS\&endpoint\=tcp%3A7854
 3867  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--data 'name=Aurea&version=DAS&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services
 3868  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--data 'name=yago&version=4&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services
 3869  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--data 'name=pepea&version=oo&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services
 3870  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--compressed\n--data 'name=alberto&version=3&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services
 3871  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--data 'name=mama&version=1&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services > file
 3872  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--data 'name=mama&version=1&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services 
 3873  git push auri  refactor-entities-94
 3874  curl -H 'Accept: application/json' -s localhost:8080/services/name/postgresql
 3875  mvn quarkus:dev -Dsuspend
 3876  curl --header "HX-Request: true" \\n--header "Content-Type: application/x-www-form-urlencoded" \\n--request POST \\n--data 'name=mama&version=1&endpoint=tcp%3A7854' \\nhttp://localhost:8080/services
 3877  git push auri  refactor-entities-94
 3878  git co main
 3879  git pull -r
 3880  mvn clean install
 3881  git checkout -b constraint-violation-127
 3882  mvn clean install -DskipTests
 3883  mvn test -Dtest=ServicesEndpointTest
 3884  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3885  mvn test -Dtest=ServicesEndpointTest
 3886  mvn test -Dtest=ServicesEndpointTest -Dmaven.surefire.debug
 3887  mvn clean install -DskipTests
 3888  mvn test -Dtest=ServicesEndpointTest
 3889  mvn clean install -DskipTests
 3890  mvn test -Dtest=ServicesEndpointTest
 3891  mvn clean install
 3892  git push auri constraint-violation-127
 3893  git co main
 3894  git pull -r
 3895  git co constraint-violation-127
 3896  git rebase main
 3897  git rebase --continue
 3898  mvn clean install
 3899  git push auri -f constraint-violation-127
 3900  git co main
 3901  git pull -r
 3902  mvn clean install
 3903  htoken
 3904  mvn test -Dtest=CredentialsPageTest
 3905  mvn test -Dtest=CredentialsPageTest -Dnative
 3906  mvn verify -Dnative
 3907  sdk use java 22.2.r17-grl
 3908  mvn verify -Dnative
 3909  mvn clean install -DskipTests
 3910  mvn test -Dtest=CredentialsPageTest
 3911  mvn verify -Dtest=CredentialsPageTest -Dnative
 3912  mvn clean install -DskipTests
 3913  mvn verify -Dnative
 3914  git checkout -b native-fail-148
 3915  git co main
 3916  git co native-fail-148
 3917  git co main
 3918  git pull -r
 3919  git co native-fail-148
 3920  git rebase main
 3921  git push auri native-fail-148
 3922  git co main
 3923  git pull -r
 3924  git checkout -b knative-sd-402
 3925  mvn test -Dtest=CredentialsPageTest
 3926  mvn clean install -Dit.test=CredentialsPageIT -Dnative
 3927  git push auri native-fail-148
 3928  git push origin demo-kcd
 3929  ./kind-reg-ingress.sh
 3930  clear
 3931  $ kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 3932  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 3933  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-core.yaml\n
 3934  curl -Lo kourier.yaml https://github.com/knative/net-kourier/releases/download/knative-v1.0.0/kourier.yaml\n
 3935  ll
 3936  kubectl apply --filename kourier.yaml
 3937  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'
 3938  kubectl describe configmap/config-network --namespace knative-serving
 3939  kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'
 3940  kubectl describe configmap/config-domain --namespace knative-serving
 3941  kubectl get pods --namespace knative-serving
 3942  kubectl get pods --namespace kourier-system
 3943  kubectl --namespace kourier-system get service kourier
 3944  docker ps -a
 3945  cat > service.yaml <<EOF\napiVersion: serving.knative.dev/v1 # Current version of Knative\nkind: Service\nmetadata:\n  name: helloworld-go # The name of the app\n  namespace: default # The namespace the app will use\nspec:\n  template:\n    spec:\n      containers:\n        - image: gcr.io/knative-samples/helloworld-go # The URL to the image of the app\n          env:\n            - name: TARGET # The environment variable printed out by the sample app\n              value: "Hello Knative Serving is up and running with Kourier!!"\nEOF\n
 3946  kubectl apply --filename service.yaml
 3947  kubectl get ksvc
 3948  curl -v http://helloworld-go.default.127.0.0.1.sslip.io
 3949  k9s
 3950  kind get clusters
 3951  git co main
 3952  git fetch --all
 3953  git pull -r
 3954  mvn clean install
 3955  docker ps -a
 3956  mvn dependency:tree > deps.txt
 3957  mvn clean install
 3958  mvn clean install -Ddekorate.build=true
 3959  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 3960  clear
 3961  docker exec -it kind-control-plane bash\n
 3962  docker images
 3963  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 3964  docker run -i --rm -p 8080:8080 127.0.0.1:5000/auri/spring-boot-on-knative-example
 3965  docker images
 3966  docker run -i --rm -p 8080:8080 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3967  docker ps
 3968  docker stop dee304c350c5
 3969  docker push 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3970  docker exec -it kind-control-plane bash\n
 3971  docker push localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3972  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 3973  docker images
 3974  docker push 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3975  kubectl apply -f target/classes/META-INF/dekorate/knative.yml
 3976  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 3977  docker images
 3978  docker push 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3979  kubectl apply -f target/classes/META-INF/dekorate/knative.yml
 3980  kubectl get ingress
 3981  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 3982  docker push 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3983  kubectl delete -f target/classes/META-INF/dekorate/knative.yml
 3984  kubectl apply -f target/classes/META-INF/dekorate/knative.yml
 3985  kn service list
 3986  brew install knative/client/kn
 3987  kn service list
 3988  kubectl get serving.knative.dev/v1
 3989  kubectl get serving.knative.dev
 3990  kubectl get services.serving.knative.dev
 3991  kubectl describe services.serving.knative.dev spring-boot-on-knative-example
 3992  docker pull localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3993  docker pull 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 3994  kubectl delete -f target/classes/META-INF/dekorate/knative.yml
 3995  kubectl apply -f target/classes/META-INF/dekorate/knative.yml
 3996  kubectl get services.serving.knative.dev
 3997  kubectl describe services.serving.knative.dev spring-boot-on-knative-example
 3998  docker ps -a
 3999  sudo vi /etc/hosts
 4000  docker pull 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4001  docker pull localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4002  docker pull kind-registry:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4003  kubectl delete -f target/classes/META-INF/dekorate/knative.yml
 4004  kubectl apply -f target/classes/META-INF/dekorate/knative.yml
 4005  kubectl get services.serving.knative.dev
 4006  kubectl describe services.serving.knative.dev spring-boot-on-knative-example
 4007  htoken
 4008  git pull -r
 4009  docker pull https://kind-registry:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4010  docker pull kind-registry:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4011  docker -version
 4012  docker --version
 4013  bash <(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 4014  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml
 4015  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-core.yaml
 4016  kubectl apply --filename kourier.yaml
 4017  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'
 4018  kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'
 4019  kubectl apply --filename service.yaml
 4020  kubectl get ksvc\n
 4021  git co main
 4022  git pull -r
 4023  mvn clean install
 4024  mvn quarkus:dev
 4025  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 4026  docker images
 4027  k create namespace test
 4028  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 4029  kubectl config set-context --current --namespace test
 4030  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 4031  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4032  kubectl get pods
 4033  kind get clusters
 4034  kubectl cluster-info
 4035  kubectl delete -f target/classes/META-INF/dekorate/knative.yml
 4036  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4037  mvn quarkus:dev -Dsuspend
 4038  kubectl get pods
 4039  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4040  kubectl get pods
 4041  kubectl delete namespace test
 4042  kubectl get pods
 4043  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 4044  kubectl config set-context --current --namespace 
 4045  kubectl config set-context --current --namespace default
 4046  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 4047  k get pods
 4048  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4049  k get pods
 4050  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 4051  k get pods
 4052  mvn quarkus:dev -Dsuspend
 4053  k get pods
 4054  ./kind-reg-ingress.sh
 4055  k get pods
 4056  mvn quarkus:dev -Dsuspend
 4057  k get pods
 4058  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4059  k get pods
 4060  mvn quarkus:dev -Dsuspend
 4061  git pull -r
 4062  mvn clean install
 4063  mvn quarkus:dev -Dsuspend
 4064  kubectl cluster-info
 4065  mvn quarkus:dev -Dsuspend
 4066  k get pods
 4067  k delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4068  k get pods
 4069  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4070  git checkout -b refresh-applications-more-frecuently
 4071  git push auri refresh-applications-more-frecuently
 4072  mvn clean package -DskipTests -Pkubernetes
 4073  git push auri refresh-applications-more-frecuently
 4074  mvn clean install -DskipTests
 4075  git co main
 4076  git pull -r
 4077  mvn clean install -DskipTests
 4078  mvn test -Dtest=ServicesEndpointTest
 4079  mvn clean install -DskipTests
 4080  mvn test -Dtest=ServicesEndpointTest
 4081  git pull -r
 4082  cd ..
 4083  ./Code/dekorate-for-devoxx-fr-2022/knative-setup.sh
 4084  chmod +x /Code/dekorate-for-devoxx-fr-2022/knative-setup.sh
 4085  chmod +x Code/dekorate-for-devoxx-fr-2022/knative-setup.sh
 4086  ./Code/dekorate-for-devoxx-fr-2022/knative-setup.sh
 4087  bash<(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 4088  bash <(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 4089  ./Code/dekorate-for-devoxx-fr-2022/knative-setup.sh
 4090  bash <(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 4091  ./Code/dekorate-for-devoxx-fr-2022/knative-setup.sh
 4092  kubectl apply --filename service.yaml
 4093  kubectl get ksvc
 4094  kubectl get services.serving.knative.dev
 4095  k9s
 4096  kubectl get services.serving.knative.dev
 4097  bash <(curl -s -L https://raw.githubusercontent.com/snowdrop/k8s-infra/main/kind/kind-reg-ingress.sh)
 4098  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 4099  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-core.yaml
 4100  kubectl apply --filename kourier.yaml
 4101  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'ç
 4102  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'
 4103  kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'
 4104  kubectl apply --filename service.yaml
 4105  kubectl get services.serving.knative.dev
 4106  oc
 4107  kubectl apply --filename service.yaml
 4108  kubectl get services.serving.knative.dev
 4109  docker pull kind-registry:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4110  docker exec -it kind-control-plane bash\n
 4111  docker push kind-registry:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4112  docker pull kind-registry:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4113  docker pull localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4114  docker pull 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4115  docker images
 4116  kind load 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4117  docker push 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4118  docker push localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4119  docker tag 127.0.0.1:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4120  docker push localhost:5000/auri/spring-boot-on-knative-example:3.1-SNAPSHOT
 4121  chmod +x kind-with-registry.sh
 4122  chmod +x Code/dekorate-for-devoxx-fr-2022/kind-with-registry.sh
 4123  ./Code/dekorate-for-devoxx-fr-2022/kind-with-registry.sh
 4124  kind delete cluster kind
 4125  kind delete cluster
 4126  mvn clean install 
 4127  mvn quarkus:dev
 4128  mvn clean install -DskipTests
 4129  mvn quarkus:dev
 4130  mvn quarkus:dev -Dsuspend
 4131  clear
 4132  kubectl cluster-info
 4133  ./Code/dekorate-for-devoxx-fr-2022/kind-with-registry.sh
 4134  kubectl cluster-info
 4135  docker ps
 4136  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
 4137  kubectl wait --namespace ingress-nginx \\n  --for=condition=ready pod \\n  --selector=app.kubernetes.io/component=controller \\n  --timeout=90s
 4138  k9s
 4139  kind clusters
 4140  kind get clusters
 4141  kind delete cluster
 4142  docker ps
 4143  docker stop 7deeb81a071e
 4144  docker rm 7deeb81a071e
 4145  docker ps
 4146  cd Code/dekorate-for-devoxx-fr-2022
 4147  ./kind-with-registry.sh
 4148  docker ps
 4149  helm upgrade --install ingress-nginx ingress-nginx \\n  --repo https://kubernetes.github.io/ingress-nginx \\n  --namespace ingress --create-namespace \\n  --set controller.service.type=NodePort \\n  --set controller.hostPort.enabled=true \\n  --set controller.watchIngressWithoutClass=true
 4150  kubectl create deployment demo --image=httpd --port=80; kubectl expose deployment demo
 4151  kubectl create ingress demo --class=nginx \\n--rule=\"demo.<VM_IP>.nip.io/*=demo:80\"
 4152  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4153  k get pods
 4154  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4155  docker ps
 4156  mvn clean install -Ddekorate.build=true -Ddekorate.push=true
 4157  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 4158  docker images
 4159  docker push 127.0.0.1:5000/amunozhe/spring-petclinic:2.0.0
 4160  docker push localhost:5000/amunozhe/spring-petclinic:2.0.0
 4161  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 4162  docker ps
 4163  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4164  k get pods
 4165  kubectl describe pod 127.0.0.1:5000/amunozhe/spring-petclinic
 4166  kubectl describe pod spring-petclinic-7d44dcdc8f-4xhss
 4167  docker exec -it kind-control-plane bash\n
 4168  docker ps
 4169  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4170  k get pods
 4171  kubectl describe pod spring-petclinic-7d44dcdc8f-4xhss
 4172  k get pods
 4173  kubectl describe pod spring-petclinic-7d44dcdc8f-j6hgl
 4174  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4175  k get pods
 4176  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4177  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4178  k get pods
 4179  docker pull localhost:5000/amunozhe/spring-petclinic:2.0.0
 4180  docker pull kind-registry:5000/amunozhe/spring-petclinic:2.0.0
 4181  docker pull localhost:5001/amunozhe/spring-petclinic:2.0.0
 4182  docker pull kind-registry:5001/amunozhe/spring-petclinic:2.0.0
 4183  docker pull 127.0.0.1:5001/amunozhe/spring-petclinic:2.0.0
 4184  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4185  k get pods
 4186  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4187  k get pods
 4188  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4189  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4190  k get pods
 4191  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4192  k get pods
 4193  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4194  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 4195  docker images
 4196  docker rmi $(docker images |grep 'spring-petclinic')
 4197  docker images
 4198  docker rmi $(docker images |grep 'sb-dekorate')
 4199  docker images
 4200  docker rmi bedea176edaf
 4201  docker rmi -f bedea176edaf
 4202  docker images
 4203  docker rmi $(docker images |grep 'spring-boot-on-knative-example')
 4204  docker images
 4205  docker rmi -f e6ec24419906
 4206  docker images
 4207  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 4208  docker images
 4209  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4210  k get pods
 4211  kubectl delete -f target/classes/META-INF/dekorate/kubernetes.yml
 4212  k get pods
 4213  mvn clean install -DskipTests -Ddekorate.build=true -Ddekorate.push=true
 4214  docker images
 4215  kubectl apply -f target/classes/META-INF/dekorate/kubernetes.yml
 4216  k get pods
 4217  kubectl cluster-info
 4218  mvn clean install -DskipTests
 4219  mvn quarkus:dev -Dsuspend
 4220  mvn clean install -DskipTests
 4221  mvn test -Dtest=QpplicationsPageTest
 4222  mvn test -Dtest=ApplicationsPageTest
 4223  mvn quarkus dev
 4224  mvn quarkus:dev
 4225  cd scripts
 4226  chmod +x create_cluster_entity.sh
 4227  ll
 4228  ./create_cluster_entity.sh
 4229  kubectl cluster-info
 4230  kind get kubeconfig
 4231  mvn test -Dtest=ApplicationsPageTest
 4232  mvn test -Dtest=ApplicationsPageTest -Dmaven.surefire.debug
 4233  mvn clean install -DskipTests
 4234  mvn test -Dtest=ApplicationsPageTest
 4235  git reset HEAD^
 4236  git checkout -b enrich-claim-157
 4237  git co main
 4238  git pull -r
 4239  git co enrich-claim-157
 4240  git rebase main
 4241  git push auri enrich-claim-157
 4242  kubectl config view --raw --minify
 4243  clear
 4244  kubectl config view --raw --minify
 4245  git co main
 4246  git pull -r
 4247  mvn clean install -DskipTests
 4248  mvn quarkus:dev
 4249  kubectl cluster-info
 4250  kubectl config view --flatten --minify --context=kind-kind
 4251  mvn quarkus:dev
 4252  ./create_cluster_entity.sh
 4253  mvn clean install -DskipTests
 4254  mvn quarkus:dev
 4255  cd scripts
 4256  ./create_cluster_entity.sh
 4257  htoken
 4258  kubectl get pods
 4259  docker ps
 4260  clear
 4261  $ kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 4262  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-crds.yaml\n
 4263  kubectl apply --filename https://github.com/knative/serving/releases/download/knative-v1.0.0/serving-core.yaml
 4264  kubectl apply --filename kourier.yaml
 4265  kubectl patch configmap/config-network \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"ingress-class":"kourier.ingress.networking.knative.dev"}}'
 4266  kubectl patch configmap/config-domain \\n  --namespace knative-serving \\n  --type merge \\n  --patch '{"data":{"127.0.0.1.sslip.io":""}}'
 4267  kubectl apply --filename service.yaml\n
 4268  kubectl get ksvc\n
 4269  kubectl get services.serving.knative.dev
 4270  oc login --token=sha256~XKTYtGfL_tO0pI8THDqMhz7-l_KO1rHrI5dSQ9DEMfA --server=https://api.sandbox.x8i5.p1.openshiftapps.com:6443
 4271  brew install openshift-cli
 4272  htoken
 4273  oc login --token=sha256~XKTYtGfL_tO0pI8THDqMhz7-l_KO1rHrI5dSQ9DEMfA --server=https://api.sandbox.x8i5.p1.openshiftapps.com:6443
 4274  oc apply --filename service.yaml\n
 4275  oc project amunozhe-dev
 4276  oc apply --filename service.yaml\n
 4277  kn route list
 4278  kubectl ctx
 4279  kubectl ctx -l
 4280  kubectl ctx
 4281  kubectl ctx kind-kind
 4282  kn route list
 4283  kn get revision
 4284  kn revision list
 4285  kubectl ctx amunozhe-dev/api-sandbox-x8i5-p1-openshiftapps-com:6443/amunozhe
 4286  oc project amunozhe-dev
 4287  oc apply --filename service.yaml\n
 4288  oc apply --filename service.yaml --namespace amunozhe-dev
 4289  kubectl ctx kind-kind
 4290  kn broker list
 4291  brew install knative-sandbox/kn-plugins/quickstart
 4292  kn quickstart kind
 4293  kind get clusters
 4294  kind cluster knative
 4295  kubectl config view --minify --output 'jsonpath={..namespace}'\n
 4296  kn service list
 4297  kn service create hello \\n--image gcr.io/knative-samples/helloworld-go \\n--port 8080 \\n--env TARGET=World
 4298  kn service list
 4299  kubectl get pod -l serving.knative.dev/service=hello -w
 4300* kn service update hello \\n--traffic hello-00001=50 \\n--traffic @latest=50
 4301* kn revision list
 4302* kn service update hello \\n--env TARGET=Knative\n
 4303* kn service list
 4304* kn revision list
 4305* kn service update hello \\n--traffic hello-00001=50 \\n--traffic @latest=50
 4306* kn revision list
 4307* kn broker list\n
 4308* kn revision list
 4309* kn service list
 4310* kubectl get services.serving.knative.dev 
 4311* kubectl get services.serving.knative.dev -o yaml
 4312* kubectl get ingress
 4313* kubectl config current-context
 4314* kubectl get services.serving.knative.dev -o yaml > kservice-2.yaml
 4315* ll
 4316* kn service delete hello
 4317* kn service list
 4318* kn revision list
 4319* kn service create hello \\n--image gcr.io/knative-samples/helloworld-go \\n--port 8080 \\n--env TARGET=World
 4320* kubectl get services.serving.knative.dev -o yaml > kservice-1.yaml
 4321* ll
 4322* cp kservice-*  ~/Code/smallrye-load-balancer/service-discovery/knative
 4323* kubectl get services
 4324* kubectl get service hello
 4325* kubectl get endpoints hello
 4326* kubectl get svc hello -o yaml
 4327* mvn clean install
 4328* mvn clean install -DskipTests
 4329* git fetch --all
 4330* git pull -r
 4331  mvn clean package -DskipTests
 4332* mvn clean install -DskipTests
 4333  git co main
 4334  git fetch --all
 4335  git pull -r
 4336  git co knative-sd-402
 4337  git rebase main
 4338  mvn clean install
 4339  mvn clean install -DskipTests
